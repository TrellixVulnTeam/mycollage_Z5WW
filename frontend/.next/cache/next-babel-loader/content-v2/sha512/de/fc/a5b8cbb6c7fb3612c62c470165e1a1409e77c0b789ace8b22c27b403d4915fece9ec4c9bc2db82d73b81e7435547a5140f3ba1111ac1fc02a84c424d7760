{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/util/FormInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, InputLabel, Input, FormHelperText } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nvar FormInput = function FormInput(_ref) {\n  _s();\n\n  var id = _ref.id,\n      origAccount = _ref.origAccount,\n      changeAccount = _ref.changeAccount,\n      shouldChange = _ref.shouldChange,\n      inputLabel = _ref.inputLabel,\n      _ref$helperText = _ref.helperText,\n      helperText = _ref$helperText === void 0 ? \"\" : _ref$helperText,\n      _ref$isRequired = _ref.isRequired,\n      isRequired = _ref$isRequired === void 0 ? false : _ref$isRequired,\n      _ref$inputType = _ref.inputType,\n      inputType = _ref$inputType === void 0 ? \"text\" : _ref$inputType;\n\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    var newAccount = _objectSpread({}, origAccount);\n\n    if (inputLabel == \"First name\") newAccount.firstName = value;\n    if (inputLabel == \"Last name\") newAccount.lastName = value;\n    if (inputLabel == \"Username\") newAccount.username = value;\n    if (inputLabel == \"Email\") newAccount.email = value;\n    if (inputLabel == \"Password\") newAccount.password = value; // changeAccount(value);\n\n    changeAccount(newAccount);\n  }, [shouldChange]); // if (shouldChange) {\n  //   console.log(\"inside changeAccoun function\");\n  //   changeAccount(value);\n  //   // const newAccount: AccountInterface = { ...origAccount };\n  //   // if (inputLabel == \"First name\") newAccount.firstName = value;\n  //   // if (inputLabel == \"Last name\") newAccount.lastName = value;\n  //   // if (inputLabel == \"Username\") newAccount.username = value;\n  //   // if (inputLabel == \"Email\") newAccount.email = value;\n  //   // if (inputLabel == \"Password\") newAccount.password = value;\n  //   // setTimeout(function () {\n  //   //   console.log(\"waited timeOut\");\n  //   // }, 3000);\n  //   // changeAccount(newAccount);\n  // }\n\n  var handleValueChange = function handleValueChange(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    id: \"formcontrol\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"input\",\n      \"aria-describedby\": \"helper-text\",\n      children: inputLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, {\n      id: id,\n      required: isRequired,\n      type: inputType,\n      value: value,\n      onChange: handleValueChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n      id: \"helper-text\",\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FormInput, \"8/j/U2Dmu444I+OEOdr+aVI5ADc=\");\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/util/FormInput.tsx"],"names":["FormControl","InputLabel","Input","FormHelperText","React","useEffect","useState","FormInput","id","origAccount","changeAccount","shouldChange","inputLabel","helperText","isRequired","inputType","value","setValue","newAccount","firstName","lastName","username","email","password","handleValueChange","e","target"],"mappings":";;;;;;;;;;;AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,cAJF,QAKO,mBALP;AAMA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAKA,IAAMC,SAAuC,GAAG,SAA1CA,SAA0C,OAS1C;AAAA;;AAAA,MARJC,EAQI,QARJA,EAQI;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,6BAHJC,UAGI;AAAA,MAHJA,UAGI,gCAHS,EAGT;AAAA,6BAFJC,UAEI;AAAA,MAFJA,UAEI,gCAFS,KAET;AAAA,4BADJC,SACI;AAAA,MADJA,SACI,+BADQ,MACR;;AAAA,kBACsBT,QAAQ,CAAC,EAAD,CAD9B;AAAA,MACGU,KADH;AAAA,MACUC,QADV;;AAGJZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,UAA4B,qBAAQT,WAAR,CAAlC;;AACA,QAAIG,UAAU,IAAI,YAAlB,EAAgCM,UAAU,CAACC,SAAX,GAAuBH,KAAvB;AAChC,QAAIJ,UAAU,IAAI,WAAlB,EAA+BM,UAAU,CAACE,QAAX,GAAsBJ,KAAtB;AAC/B,QAAIJ,UAAU,IAAI,UAAlB,EAA8BM,UAAU,CAACG,QAAX,GAAsBL,KAAtB;AAC9B,QAAIJ,UAAU,IAAI,OAAlB,EAA2BM,UAAU,CAACI,KAAX,GAAmBN,KAAnB;AAC3B,QAAIJ,UAAU,IAAI,UAAlB,EAA8BM,UAAU,CAACK,QAAX,GAAsBP,KAAtB,CANhB,CAOd;;AACAN,IAAAA,aAAa,CAACQ,UAAD,CAAb;AACD,GATQ,EASN,CAACP,YAAD,CATM,CAAT,CAHI,CAcJ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,MAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAEpB;AACJR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAC,aAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,0BAAiB,aAA7C;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,KAAD;AACE,MAAA,EAAE,EAAEJ,EADN;AAEE,MAAA,QAAQ,EAAEM,UAFZ;AAGE,MAAA,IAAI,EAAEC,SAHR;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,QAAQ,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,aAJF,eAWE,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,aAAnB;AAAA,gBAAkCX;AAAlC;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CA9DD;;GAAMN,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import {\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport FormInputInterface from \"../interfaces/FormInputInterface\";\nimport AccountInterface from \"../interfaces/AccountInterface\";\n\nconst FormInput: React.FC<FormInputInterface> = ({\n  id,\n  origAccount,\n  changeAccount,\n  shouldChange,\n  inputLabel,\n  helperText = \"\",\n  isRequired = false,\n  inputType = \"text\",\n}) => {\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    const newAccount: AccountInterface = { ...origAccount };\n    if (inputLabel == \"First name\") newAccount.firstName = value;\n    if (inputLabel == \"Last name\") newAccount.lastName = value;\n    if (inputLabel == \"Username\") newAccount.username = value;\n    if (inputLabel == \"Email\") newAccount.email = value;\n    if (inputLabel == \"Password\") newAccount.password = value;\n    // changeAccount(value);\n    changeAccount(newAccount);\n  }, [shouldChange]);\n\n  // if (shouldChange) {\n  //   console.log(\"inside changeAccoun function\");\n\n  //   changeAccount(value);\n  //   // const newAccount: AccountInterface = { ...origAccount };\n  //   // if (inputLabel == \"First name\") newAccount.firstName = value;\n  //   // if (inputLabel == \"Last name\") newAccount.lastName = value;\n  //   // if (inputLabel == \"Username\") newAccount.username = value;\n  //   // if (inputLabel == \"Email\") newAccount.email = value;\n  //   // if (inputLabel == \"Password\") newAccount.password = value;\n\n  //   // setTimeout(function () {\n  //   //   console.log(\"waited timeOut\");\n  //   // }, 3000);\n\n  //   // changeAccount(newAccount);\n  // }\n\n  const handleValueChange = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl id=\"formcontrol\">\n      <InputLabel htmlFor=\"input\" aria-describedby=\"helper-text\">\n        {inputLabel}\n      </InputLabel>\n      <Input\n        id={id}\n        required={isRequired}\n        type={inputType}\n        value={value}\n        onChange={handleValueChange}\n      />\n      <FormHelperText id=\"helper-text\">{helperText}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}