{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport FormInput from \"./util/FormInput\";\n\n// interface TestInterface {\n//   firstName: string;\n//   lastName: string;\n// }\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  // final values\n  var _useState = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      account = _useState[0],\n      setAccount = _useState[1];\n\n  var inputs = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  var helperTexts = [\"\", \"\", \"Don't be afraid to be creative!\", \"Your email won't be shared.\", \"Your password is hashed.\"];\n  var inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  var _useState2 = useState(false),\n      shouldReturn = _useState2[0],\n      setShouldReturn = _useState2[1];\n\n  var returnValue = function returnValue(val) {\n    return val;\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setShouldReturn(true);\n    console.log(\"submitted\");\n  }; //   const [obj, setObj] = useState({\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //   } as TestInterface);\n  //   const handleArr = (newObj: TestInterface) => {\n  //     setObj(newObj);\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputs.map(function (input, i) {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          returnValue: returnValue,\n          shouldReturn: shouldReturn,\n          id: \"\".concat(input, \"-input\"),\n          inputLabel: input,\n          helperText: helperTexts[i],\n          isRequired: true,\n          inputType: inputTypes[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"TDXixAPm8KSMeGN3IjP/rYibAm4=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Box","Button","Typography","useState","FormInput","HomePage","firstName","lastName","username","email","password","account","setAccount","inputs","helperTexts","inputTypes","shouldReturn","setShouldReturn","returnValue","val","handleSubmit","e","preventDefault","console","log","map","input","i"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;;AAGA;AACA;AACA;AACA;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAClB;AADkB,kBAEYF,QAAQ,CAAC;AACrCG,IAAAA,SAAS,EAAE,EAD0B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,KAAK,EAAE,EAJ8B;AAKrCC,IAAAA,QAAQ,EAAE;AAL2B,GAAD,CAFpB;AAAA,MAEXC,OAFW;AAAA,MAEFC,UAFE;;AAUlB,MAAMC,MAAgB,GAAG,CACvB,YADuB,EAEvB,WAFuB,EAGvB,UAHuB,EAIvB,OAJuB,EAKvB,UALuB,CAAzB;AAOA,MAAMC,WAAqB,GAAG,CAC5B,EAD4B,EAE5B,EAF4B,EAG5B,iCAH4B,EAI5B,6BAJ4B,EAK5B,0BAL4B,CAA9B;AAOA,MAAMC,UAAoB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,UAAlC,CAA7B;;AAxBkB,mBA0BsBZ,QAAQ,CAAC,KAAD,CA1B9B;AAAA,MA0BXa,YA1BW;AAAA,MA0BGC,eA1BH;;AA2BlB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAiB;AACnC,WAAOA,GAAP;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAuC;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAJD,CA/BkB,CAqClB;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE,QAAC,GAAD;AAAA,4BAYE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEJ,YAA9B;AAAA,iBACGP,MAAM,CAACY,GAAP,CAAW,UAACC,KAAD,EAAgBC,CAAhB;AAAA,4BACV,QAAC,SAAD;AAEE,UAAA,WAAW,EAAET,WAFf;AAGE,UAAA,YAAY,EAAEF,YAHhB;AAIE,UAAA,EAAE,YAAKU,KAAL,WAJJ;AAKE,UAAA,UAAU,EAAEA,KALd;AAME,UAAA,UAAU,EAAEZ,WAAW,CAACa,CAAD,CANzB;AAOE,UAAA,UAAU,EAAE,IAPd;AAQE,UAAA,SAAS,EAAEZ,UAAU,CAACY,CAAD;AARvB,WACOA,CADP;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CADH,eAaE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA/EQtB,Q;;KAAAA,Q;AAiFT,eAAeA,QAAf","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport FormInput from \"./util/FormInput\";\nimport AccountInterface from \"./interfaces/AccountInterface\";\n\n// interface TestInterface {\n//   firstName: string;\n//   lastName: string;\n// }\n\nfunction HomePage() {\n  // final values\n  const [account, setAccount] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  } as AccountInterface);\n\n  const inputs: string[] = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const helperTexts: string[] = [\n    \"\",\n    \"\",\n    \"Don't be afraid to be creative!\",\n    \"Your email won't be shared.\",\n    \"Your password is hashed.\",\n  ];\n  const inputTypes: string[] = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const [shouldReturn, setShouldReturn] = useState(false);\n  const returnValue = (val: string) => {\n    return val;\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    setShouldReturn(true);\n    console.log(\"submitted\");\n  };\n\n  //   const [obj, setObj] = useState({\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //   } as TestInterface);\n\n  //   const handleArr = (newObj: TestInterface) => {\n  //     setObj(newObj);\n  //   };\n\n  return (\n    <Box>\n      {/* {console.log(obj)} */}\n      {/* <Button\n        onClick={() =>\n          handleArr({\n            firstName: \"Sahil\",\n            lastName: \"Kamboj\",\n          } as TestInterface)\n        }\n      >\n        Change 2\n      </Button> */}\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input: string, i: number) => (\n          <FormInput\n            key={i}\n            returnValue={returnValue}\n            shouldReturn={shouldReturn}\n            id={`${input}-input`}\n            inputLabel={input}\n            helperText={helperTexts[i]}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}