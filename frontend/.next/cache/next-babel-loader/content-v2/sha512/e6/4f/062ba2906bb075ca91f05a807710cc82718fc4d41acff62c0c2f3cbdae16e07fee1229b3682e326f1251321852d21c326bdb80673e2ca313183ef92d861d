{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/FileUpload.tsx\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useState } from \"react\";\n\nconst FileUpload = () => {\n  let errorText = \"File type not valid\";\n  const {\n    0: isFileError,\n    1: setIsFileError\n  } = useState(false);\n  const {\n    0: uploadedFile,\n    1: setUploadedFile\n  } = useState(null);\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = e => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n      setUploadedFile(null);\n      return;\n    }\n\n    setIsFileError(false);\n    setUploadedFile(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isFileError && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorText\n    }, errorText, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), !isFileError && uploadedFile !== null && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/FileUpload.tsx"],"names":["Box","Button","Alert","useState","FileUpload","errorText","isFileError","setIsFileError","uploadedFile","setUploadedFile","imageTypes","handleImageChange","e","fileName","target","files","name","periodIdx","lastIndexOf","includes","slice"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,MAAIC,SAAS,GAAG,qBAAhB;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCJ,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMO,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAnB;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnC;AACA,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,WAAT,CAAqB,GAArB,CAAlB;;AACA,QAAI,CAACR,UAAU,CAACS,QAAX,CAAoBN,QAAQ,CAACO,KAAT,CAAeH,SAAS,GAAG,CAA3B,CAApB,CAAL,EAAyD;AACvDV,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA;AACD;;AACDF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,eAAe,CAACG,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AACD,GAVD;;AAWA,sBACE,QAAC,GAAD;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,SAAS,EAAC,OAAtC;AAAA,6BACE;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAEJ;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGL,WAAW,iBACV,QAAC,KAAD;AAAuB,MAAA,QAAQ,EAAC,OAAhC;AAAA,gBACGD;AADH,OAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,YANJ,EAUG,CAACC,WAAD,IAAgBE,YAAY,KAAK,IAAjC,iBACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAeE;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCD;;AAuCA,eAAeJ,UAAf","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useState } from \"react\";\n\nconst FileUpload = () => {\n  let errorText = \"File type not valid\";\n  const [isFileError, setIsFileError] = useState<boolean>(false);\n  const [uploadedFile, setUploadedFile] = useState(null);\n\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = (e) => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n      setUploadedFile(null);\n      return;\n    }\n    setIsFileError(false);\n    setUploadedFile(e.target.files[0]);\n  };\n  return (\n    <Box>\n      {/* Possible turn file upload logic into another component */}\n      <Button variant=\"contained\" component=\"label\">\n        <input id=\"file-upload\" type=\"file\" onChange={handleImageChange} />\n      </Button>\n      {isFileError && (\n        <Alert key={errorText} severity=\"error\">\n          {errorText}\n        </Alert>\n      )}\n      {!isFileError && uploadedFile !== null && (\n        <Button variant=\"contained\" color=\"primary\">\n          Upload\n        </Button>\n      )}\n      <br />\n    </Box>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}