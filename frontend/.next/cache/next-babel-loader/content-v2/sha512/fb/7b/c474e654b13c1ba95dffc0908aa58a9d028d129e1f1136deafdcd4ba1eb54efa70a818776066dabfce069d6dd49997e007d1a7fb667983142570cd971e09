{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/LogIn.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"../util/components/FormInput\";\nimport { LogInContext } from \"../index\";\n\nvar Login = function Login() {\n  _s();\n\n  // set user-uuid cookie\n  var _useCookies = useCookies([\"userUUID\"]),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      userIDCookie = _useCookies2[0],\n      setUserIDCookie = _useCookies2[1];\n\n  var _useState = useState(false),\n      shouldChange = _useState[0],\n      setShouldChange = _useState[1];\n\n  var _useState2 = useState([]),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var inputs = [\"Email\", \"Password\"];\n  var inputTypes = [\"email\", \"password\"]; // contexts\n\n  var account = useContext(LogInContext);\n\n  var initiateChange = function initiateChange(e) {\n    e.preventDefault();\n    setShouldChange(!shouldChange); //    sleep(10);\n  };\n\n  var loginAccount = function loginAccount(account) {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(account)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      //        console.log(data);\n      if (data[\"errors\"]) {\n        var newErrors = [];\n        data[\"errors\"].map(function (error) {\n          return newErrors.push(error[\"message\"]);\n        });\n        setErrors(newErrors);\n      } else {\n        setErrors([]);\n        console.log(data[\"accounts\"][0].uuid);\n        setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, {\n          path: \"/\"\n        });\n        console.log(\"user uuid cookie set\");\n      }\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    console.log(account);\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  useEffect(function () {\n    if (account.email != \"\") {\n      handleSubmit();\n    }\n  }, [shouldChange]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), console.log(), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: function onSubmit() {\n        return initiateChange();\n      },\n      children: [inputs.map(function (input, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormInput, {\n            id: \"\".concat(input, \"-input\"),\n            logInShouldChange: shouldChange,\n            signUpShouldChange: false,\n            inputLabel: input,\n            isRequired: true,\n            inputType: inputTypes[i]\n          }, input, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)\n        }, input, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this), errors.map(function (error) {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"QcXd3pX7pAF6ycUFXz4UH/a8x2A=\", false, function () {\n  return [useCookies];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/LogIn.tsx"],"names":["Box","Typography","Button","Alert","React","useState","useContext","useEffect","useCookies","FormInput","LogInContext","Login","userIDCookie","setUserIDCookie","shouldChange","setShouldChange","errors","setErrors","inputs","inputTypes","account","initiateChange","e","preventDefault","loginAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","newErrors","map","error","push","console","log","uuid","path","handleSubmit","email","input","i"],"mappings":"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","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport FormInput from \"../util/components/FormInput\";\nimport { LogInContext } from \"../index\";\nimport AccountInterface from \"../interfaces/AccountInterface\";\nimport { sleep } from \"../util/logic\";\n\nconst Login = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n\n  const [shouldChange, setShouldChange] = useState<boolean>(false);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const inputs = [\"Email\", \"Password\"];\n  const inputTypes = [\"email\", \"password\"];\n\n  // contexts\n  const account = useContext(LogInContext);\n\n  const initiateChange = (e) => {\n    e.preventDefault();\n    setShouldChange(!shouldChange);\n    //    sleep(10);\n  };\n\n  const loginAccount = (account: AccountInterface) => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        //        console.log(data);\n        if (data[\"errors\"]) {\n          let newErrors: string[] = [];\n          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n          setErrors(newErrors);\n        } else {\n          setErrors([]);\n          console.log(data[\"accounts\"][0].uuid);\n          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n          console.log(\"user uuid cookie set\");\n        }\n      });\n  };\n  const handleSubmit = (e) => {\n    console.log(account);\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  useEffect(() => {\n    if (account.email != \"\") {\n      handleSubmit();\n    }\n  }, [shouldChange]);\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      {console.log()}\n      <form method=\"POST\" onSubmit={() => initiateChange()}>\n        {inputs.map((input, i) => (\n          <div key={input}>\n            <FormInput\n              key={input}\n              id={`${input}-input`}\n              logInShouldChange={shouldChange}\n              signUpShouldChange={false}\n              inputLabel={input}\n              isRequired={true}\n              inputType={inputTypes[i]}\n            />\n          </div>\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}