{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx\";\nimport { useState, useRef } from \"react\";\nimport { Fragment } from \"react\";\nimport Draggable from \"react-draggable\";\n//import styles from \"../../styles/Image.module.scss\";\nimport \"../../styles/Image.module.scss\";\n\nconst Image = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height\n}) => {\n  const imgRef = useRef(); //  const getData = (imgRef: MutableRefObject<undefined>) => {\n  //    if (imgRef.current !== undefined) {\n  //      console.log(imgRef.current.getBoundingClientRect());\n  //      console.log(screen.width, screen.height);\n  //      const xPct =\n  //        (100 * imgRef.current.getBoundingClientRect().left) / screen.width;\n  //      const yPct =\n  //        (100 * imgRef.current.getBoundingClientRect().top) / screen.height;\n  //      const height = imgRef.current.getBoundingClientRect().height;\n  //      const width = imgRef.current.getBoundingClientRect().width;\n  //      console.log(xPct, yPct);\n  //    }\n  //  };\n\n  const {\n    0: curXPos,\n    1: setCurXPos\n  } = useState(xPos);\n  const {\n    0: curYPos,\n    1: setCurYPos\n  } = useState(yPos);\n  const {\n    0: curRot,\n    1: setCurRot\n  } = useState(rot);\n  const {\n    0: curWidth,\n    1: setCurWidth\n  } = useState(width);\n  const {\n    0: curHeight,\n    1: setCurHeight\n  } = useState(height);\n\n  const changeWidth = diff => {\n    setCurWidth(curWidth + diff);\n  };\n\n  const changeHeight = diff => {\n    setCurHeight(curHeight + diff);\n  };\n\n  const outerDivStyle = {\n    ZIndex: \"2\"\n  };\n  const innerDivStyle = {\n    border: \"2px black solid\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: \"#f0f0f0\"\n  };\n  const resizerStyles = {\n    position: \"absolute\",\n    width: \"10px\",\n    height: \"10px\",\n    background: \"black\"\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: outerDivStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: innerDivStyle,\n          children: \"Hello world\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: resizerStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Image;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx"],"names":["useState","useRef","Fragment","Draggable","Image","uuid","url","xPos","yPos","rot","width","height","imgRef","curXPos","setCurXPos","curYPos","setCurYPos","curRot","setCurRot","curWidth","setCurWidth","curHeight","setCurHeight","changeWidth","diff","changeHeight","outerDivStyle","ZIndex","innerDivStyle","border","display","alignItems","justifyContent","background","resizerStyles","position"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B;AACA,SAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AAIA;AACA,OAAO,gCAAP;;AAEA,MAAMC,KAA+B,GAAG,CAAC;AACrCC,EAAAA,IADqC;AAErCC,EAAAA,GAFqC;AAGrCC,EAAAA,IAHqC;AAIrCC,EAAAA,IAJqC;AAKrCC,EAAAA,GALqC;AAMrCC,EAAAA,KANqC;AAOrCC,EAAAA;AAPqC,CAAD,KASxC;AACI,QAAMC,MAAM,GAAGX,MAAM,EAArB,CADJ,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAASO,IAAT,CAAtC;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAASQ,IAAT,CAAtC;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAASS,GAAT,CAApC;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAASU,KAAT,CAAxC;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4BtB,QAAQ,CAASW,MAAT,CAA1C;;AAEA,QAAMY,WAAW,GAAIC,IAAD,IACpB;AACIJ,IAAAA,WAAW,CAACD,QAAQ,GAAGK,IAAZ,CAAX;AACH,GAHD;;AAIA,QAAMC,YAAY,GAAID,IAAD,IACrB;AACIF,IAAAA,YAAY,CAACD,SAAS,GAAGG,IAAb,CAAZ;AACH,GAHD;;AAKA,QAAME,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE;AADU,GAAtB;AAIA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,iBADU;AAElBC,IAAAA,OAAO,EAAE,MAFS;AAGlBC,IAAAA,UAAU,EAAE,QAHM;AAIlBC,IAAAA,cAAc,EAAE,QAJE;AAKlBC,IAAAA,UAAU,EAAE;AALM,GAAtB;AAQA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBzB,IAAAA,KAAK,EAAE,MAFW;AAGlBC,IAAAA,MAAM,EAAE,MAHU;AAIlBsB,IAAAA,UAAU,EAAE;AAJM,GAAtB;AAOA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,SAAD;AAAA,6BACI;AAAK,QAAA,KAAK,EAAEP,aAAZ;AAAA,gCACI;AAAK,UAAA,KAAK,EAAEE,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAEM;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtED;;AAwEA,eAAe9B,KAAf","sourcesContent":["import {useState, useRef} from \"react\";\nimport {MutableRefObject, Fragment} from \"react\";\nimport classnames from \"classnames\";\nimport Draggable from \"react-draggable\";\n\nimport {ImageInterface} from \"../interfaces/ImageInterface\";\n\n//import styles from \"../../styles/Image.module.scss\";\nimport \"../../styles/Image.module.scss\";\n\nconst Image: React.FC<ImageInterface> = ({\n    uuid,\n    url,\n    xPos,\n    yPos,\n    rot,\n    width,\n    height,\n}) =>\n{\n    const imgRef = useRef();\n\n    //  const getData = (imgRef: MutableRefObject<undefined>) => {\n    //    if (imgRef.current !== undefined) {\n    //      console.log(imgRef.current.getBoundingClientRect());\n    //      console.log(screen.width, screen.height);\n    //      const xPct =\n    //        (100 * imgRef.current.getBoundingClientRect().left) / screen.width;\n    //      const yPct =\n    //        (100 * imgRef.current.getBoundingClientRect().top) / screen.height;\n    //      const height = imgRef.current.getBoundingClientRect().height;\n    //      const width = imgRef.current.getBoundingClientRect().width;\n    //      console.log(xPct, yPct);\n    //    }\n    //  };\n\n    const [curXPos, setCurXPos] = useState<number>(xPos);\n    const [curYPos, setCurYPos] = useState<number>(yPos);\n    const [curRot, setCurRot] = useState<number>(rot);\n    const [curWidth, setCurWidth] = useState<number>(width);\n    const [curHeight, setCurHeight] = useState<number>(height);\n\n    const changeWidth = (diff: number) =>\n    {\n        setCurWidth(curWidth + diff);\n    };\n    const changeHeight = (diff: number) =>\n    {\n        setCurHeight(curHeight + diff);\n    };\n\n    const outerDivStyle = {\n        ZIndex: \"2\"\n    };\n\n    const innerDivStyle = {\n        border: \"2px black solid\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"#f0f0f0\",\n    };\n\n    const resizerStyles = {\n        position: \"absolute\",\n        width: \"10px\",\n        height: \"10px\",\n        background: \"black\",\n    };\n\n    return (\n        <Fragment>\n            <Draggable>\n                <div style={outerDivStyle}>\n                    <div style={innerDivStyle}>Hello world</div>\n                    <div style={resizerStyles}></div>\n                </div>\n            </Draggable>\n        </Fragment>\n    );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}