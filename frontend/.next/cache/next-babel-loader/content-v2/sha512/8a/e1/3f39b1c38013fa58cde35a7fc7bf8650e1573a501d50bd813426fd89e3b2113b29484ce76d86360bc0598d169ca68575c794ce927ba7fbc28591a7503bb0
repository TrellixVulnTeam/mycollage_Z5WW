{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { ResizableBox } from \"react-resizable\";\nimport styles from \"../../styles/Image.module.scss\";\n\nvar Image = function Image(_ref) {\n  _s();\n\n  var uuid = _ref.uuid,\n      url = _ref.url,\n      xPos = _ref.xPos,\n      yPos = _ref.yPos,\n      rot = _ref.rot,\n      width = _ref.width,\n      height = _ref.height;\n  // set variable\n  var imgRef = useRef();\n\n  var getData = function getData(imgRef) {\n    if (imgRef.current !== undefined) {\n      console.log(imgRef.current.getBoundingClientRect());\n      console.log(screen.width, screen.height);\n      var xPct = 100 * imgRef.current.getBoundingClientRect().left / screen.width;\n      var yPct = 100 * imgRef.current.getBoundingClientRect().top / screen.height;\n      var _height = imgRef.current.getBoundingClientRect().height;\n      var _width = imgRef.current.getBoundingClientRect().width;\n      console.log(xPct, yPct);\n    }\n  };\n\n  var _useState = useState(xPos),\n      curXPos = _useState[0],\n      setCurXPos = _useState[1];\n\n  var _useState2 = useState(yPos),\n      curYPos = _useState2[0],\n      setCurYPos = _useState2[1];\n\n  var _useState3 = useState(rot),\n      curRot = _useState3[0],\n      setCurRot = _useState3[1];\n\n  var _useState4 = useState(width),\n      curWidth = _useState4[0],\n      setCurWidth = _useState4[1];\n\n  var _useState5 = useState(height),\n      curHeight = _useState5[0],\n      setCurHeight = _useState5[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Draggable, {\n      children: /*#__PURE__*/_jsxDEV(ResizableBox, {\n        width: 1,\n        height: 1,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.draggableDiv,\n          style: {\n            width: \"\".concat(width, \"px\"),\n            height: \"\".concat(height, \"px\")\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.innerDiv,\n            style: {\n              width: \"\".concat(width, \"px\"),\n              height: \"\".concat(height, \"px\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            className: styles.img,\n            ref: imgRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return getData(imgRef);\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Image, \"p60W4ARSlCEuqgyaZdyQOuPJShA=\");\n\n_c = Image;\nexport default Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx"],"names":["useState","useRef","Draggable","ResizableBox","styles","Image","uuid","url","xPos","yPos","rot","width","height","imgRef","getData","current","undefined","console","log","getBoundingClientRect","screen","xPct","left","yPct","top","curXPos","setCurXPos","curYPos","setCurYPos","curRot","setCurRot","curWidth","setCurWidth","curHeight","setCurHeight","draggableDiv","innerDiv","img"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { ResizableBox } from \"react-resizable\";\nimport { MutableRefObject } from \"react\";\n\nimport styles from \"../../styles/Image.module.scss\";\n\nimport { ImageInterface } from \"../interfaces/ImageInterface\";\n\nconst Image: React.FC<ImageInterface> = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height,\n}) => {\n  // set variable\n  const imgRef = useRef();\n\n  const getData = (imgRef: MutableRefObject<undefined>) => {\n    if (imgRef.current !== undefined) {\n      console.log(imgRef.current.getBoundingClientRect());\n      console.log(screen.width, screen.height);\n      const xPct =\n        (100 * imgRef.current.getBoundingClientRect().left) / screen.width;\n      const yPct =\n        (100 * imgRef.current.getBoundingClientRect().top) / screen.height;\n      const height = imgRef.current.getBoundingClientRect().height;\n      const width = imgRef.current.getBoundingClientRect().width;\n      console.log(xPct, yPct);\n    }\n  };\n\n  const [curXPos, setCurXPos] = useState<number>(xPos);\n  const [curYPos, setCurYPos] = useState<number>(yPos);\n  const [curRot, setCurRot] = useState<number>(rot);\n  const [curWidth, setCurWidth] = useState<number>(width);\n  const [curHeight, setCurHeight] = useState<number>(height);\n\n  return (\n    <div>\n      <Draggable>\n        <ResizableBox width={1} height={1}>\n          <div\n            className={styles.draggableDiv}\n            style={{ width: `${width}px`, height: `${height}px` }}\n          >\n            <div\n              className={styles.innerDiv}\n              style={{ width: `${width}px`, height: `${height}px` }}\n            />\n            <img src={url} className={styles.img} ref={imgRef} />\n          </div>\n        </ResizableBox>\n      </Draggable>\n      <button onClick={() => getData(imgRef)}>Click me</button>\n    </div>\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}