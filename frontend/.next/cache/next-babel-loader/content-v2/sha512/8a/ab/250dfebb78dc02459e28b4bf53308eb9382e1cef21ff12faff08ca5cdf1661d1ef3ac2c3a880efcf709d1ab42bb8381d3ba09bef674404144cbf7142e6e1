{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/LogIn.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport FormInput from \"../util/components/FormInput\";\nimport { LogInContext } from \"../index\";\nimport { sleep } from \"../util/methods\";\n\nvar Login = function Login() {\n  _s();\n\n  var inputs = [\"Email\", \"Password\"];\n  var inputTypes = [\"email\", \"password\"];\n  var account = useContext(LogInContext);\n\n  var _useState = useState(false),\n      shouldChange = _useState[0],\n      setShouldChange = _useState[1]; // const [errors, setErrors] = useState<string[]>([]);\n\n\n  var initiateChange = function initiateChange() {\n    setShouldChange(!shouldChange);\n    sleep(5);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  var loginAccount = function loginAccount(account) {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(account)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data); // if (data[\"errors\"].length > 0) {\n      //   let newErrors: string[] = [];\n      //   data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n      //   setErrors(newErrors);\n      // }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputs.map(function (input, i) {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          id: \"\".concat(input, \"-input\"),\n          logInShouldChange: shouldChange,\n          signUpShouldChange: false,\n          inputLabel: input,\n          isRequired: true,\n          inputType: inputTypes[i]\n        }, input, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"nhq1Xdq39g39Yz0PKbxkebEcQmA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/LogIn.tsx"],"names":["Box","Typography","Button","React","useState","useContext","FormInput","LogInContext","sleep","Login","inputs","inputTypes","account","shouldChange","setShouldChange","initiateChange","handleSubmit","e","preventDefault","loginAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","map","input","i"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,mBAAxC;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,UAAV,CAAf;AACA,MAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,UAAV,CAAnB;AACA,MAAMC,OAAO,GAAGP,UAAU,CAACE,YAAD,CAA1B;;AAHkB,kBAKsBH,QAAQ,CAAU,KAAV,CAL9B;AAAA,MAKXS,YALW;AAAA,MAKGC,eALH,iBAMlB;;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACAL,IAAAA,KAAK,CAAC,CAAD,CAAL;AACD,GAHD;;AAIA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAuC;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc;AACdI,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACD,GAJD;;AAMA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACP,OAAD,EAA+B;AAClDQ,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFmC;AAK5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,OAAf;AALsC,KAAzC,CAAL,CAOGc,IAPH,CAOQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADc,CAEd;AACA;AACA;AACA;AACA;AACD,KAfH;AAgBD,GAjBD;;AAmBA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEb,YAA9B;AAAA,iBACGN,MAAM,CAACsB,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR;AAAA,4BACV,QAAC,SAAD;AAEE,UAAA,EAAE,YAAKD,KAAL,WAFJ;AAGE,UAAA,iBAAiB,EAAEpB,YAHrB;AAIE,UAAA,kBAAkB,EAAE,KAJtB;AAKE,UAAA,UAAU,EAAEoB,KALd;AAME,UAAA,UAAU,EAAE,IANd;AAOE,UAAA,SAAS,EAAEtB,UAAU,CAACuB,CAAD;AAPvB,WACOD,KADP;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CADH,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CA/DD;;GAAMxB,K;;KAAAA,K;AAiEN,eAAeA,KAAf","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useState, useContext } from \"react\";\n\nimport FormInput from \"../util/components/FormInput\";\nimport { LogInContext } from \"../index\";\nimport AccountInterface from \"../interfaces/AccountInterface\";\nimport { sleep } from \"../util/methods\";\n\nconst Login = () => {\n  const inputs = [\"Email\", \"Password\"];\n  const inputTypes = [\"email\", \"password\"];\n  const account = useContext(LogInContext);\n\n  const [shouldChange, setShouldChange] = useState<boolean>(false);\n  // const [errors, setErrors] = useState<string[]>([]);\n\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n    sleep(5);\n  };\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  const loginAccount = (account: AccountInterface) => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        // if (data[\"errors\"].length > 0) {\n        //   let newErrors: string[] = [];\n        //   data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n        //   setErrors(newErrors);\n        // }\n      });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input, i) => (\n          <FormInput\n            key={input}\n            id={`${input}-input`}\n            logInShouldChange={shouldChange}\n            signUpShouldChange={false}\n            inputLabel={input}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {/* {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))} */}\n      </form>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}