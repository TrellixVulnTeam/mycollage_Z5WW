{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst Login = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState([]);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const loginAccount = () => {\n    console.log(email, password);\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      //        console.log(data);\n      if (data[\"errors\"]) {\n        let newErrors = [];\n        data[\"errors\"].map(error => newErrors.push(error[\"message\"]));\n        setErrors(newErrors);\n      } else {\n        setErrors([]);\n        console.log(data[\"accounts\"][0].uuid);\n        setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, {\n          path: \"/\"\n        });\n        console.log(\"user uuid cookie set\");\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), console.log(), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        type: \"password\",\n        onChange: handlePasswordChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), errors.map(error => /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx"],"names":["Box","Typography","Button","Alert","React","useState","useCookies","Login","userIDCookie","setUserIDCookie","errors","setErrors","email","setEmail","password","setPassword","handleEmailChange","e","target","value","handlePasswordChange","loginAccount","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","newErrors","map","error","push","uuid","path","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst Login = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n\n  const [errors, setErrors] = useState<string[]>([]);\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const loginAccount = () => {\n    console.log(email, password);\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        //        console.log(data);\n        if (data[\"errors\"]) {\n          let newErrors: string[] = [];\n          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n          setErrors(newErrors);\n        } else {\n          setErrors([]);\n          console.log(data[\"accounts\"][0].uuid);\n          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n          console.log(\"user uuid cookie set\");\n        }\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      {console.log()}\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n          placeholder=\"Email\"\n        />\n        <input\n          value={password}\n          type=\"password\"\n          onChange={handlePasswordChange}\n          placeholder=\"Password\"\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}