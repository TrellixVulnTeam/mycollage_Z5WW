{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nvar Login = function Login() {\n  _s();\n\n  // set user-uuid cookie\n  var _useCookies = useCookies([\"userUUID\"]),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      userIDCookie = _useCookies2[0],\n      setUserIDCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var handleEmailChange = function handleEmailChange(e) {\n    setEmail(e.target.value);\n  };\n\n  var handlePasswordChange = function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  };\n\n  var loginAccount = function loginAccount() {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      //        console.log(data);\n      if (data[\"errors\"]) {\n        var newErrors = [];\n        data[\"errors\"].map(function (error) {\n          return newErrors.push(error[\"message\"]);\n        });\n        setErrors(newErrors);\n      } else {\n        setErrors([]);\n        console.log(data[\"accounts\"][0].uuid);\n        setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, {\n          path: \"/\"\n        });\n        console.log(\"user uuid cookie set\");\n      }\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), console.log(), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        type: \"password\",\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this), errors.map(function (error) {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"khFsboo+HBEoLTG6HCSEeQ9bKvg=\", false, function () {\n  return [useCookies];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx"],"names":["Box","Typography","Button","Alert","React","useState","useCookies","Login","userIDCookie","setUserIDCookie","errors","setErrors","email","setEmail","password","setPassword","handleEmailChange","e","target","value","handlePasswordChange","loginAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","newErrors","map","error","push","console","log","uuid","path","handleSubmit","preventDefault"],"mappings":";;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB;AADkB,oBAEsBD,UAAU,CAAC,CAAC,UAAD,CAAD,CAFhC;AAAA;AAAA,MAEXE,YAFW;AAAA,MAEGC,eAFH;;AAAA,kBAIUJ,QAAQ,CAAW,EAAX,CAJlB;AAAA,MAIXK,MAJW;AAAA,MAIHC,SAJG;;AAAA,mBAKQN,QAAQ,CAAS,EAAT,CALhB;AAAA,MAKXO,KALW;AAAA,MAKJC,QALI;;AAAA,mBAMcR,QAAQ,CAAS,EAAT,CANtB;AAAA,MAMXS,QANW;AAAA,MAMDC,WANC;;AAQlB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACH,CAAD,EAAO;AAClCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFmC;AAK5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEf,QAAAA,KAAK,EAALA,KAAF;AAASE,QAAAA,QAAQ,EAARA;AAAT,OAAf;AALsC,KAAzC,CAAL,CAOGc,IAPH,CAOQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD,EAAU;AACd;AACA,UAAIA,IAAI,CAAC,QAAD,CAAR,EAAoB;AAClB,YAAIC,SAAmB,GAAG,EAA1B;AACAD,QAAAA,IAAI,CAAC,QAAD,CAAJ,CAAeE,GAAf,CAAmB,UAACC,KAAD;AAAA,iBAAWF,SAAS,CAACG,IAAV,CAAeD,KAAK,CAAC,SAAD,CAApB,CAAX;AAAA,SAAnB;AACAvB,QAAAA,SAAS,CAACqB,SAAD,CAAT;AACD,OAJD,MAIO;AACLrB,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAyB,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoBO,IAAhC;AACA7B,QAAAA,eAAe,CAAC,UAAD,EAAasB,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoBO,IAAjC,EAAuC;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAvC,CAAf;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,KApBH;AAqBD,GAtBD;;AAwBA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACvB,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACwB,cAAF;AACApB,IAAAA,YAAY;AACb,GAHD;;AAKA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGe,OAAO,CAACC,GAAR,EAFH,eAGE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEG,YAA9B;AAAA,8BACE;AAAO,QAAA,KAAK,EAAE5B,KAAd;AAAqB,QAAA,QAAQ,EAAEI;AAA/B;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,QAAA,KAAK,EAAEF,QADT;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEM;AAHZ;AAAA;AAAA;AAAA;AAAA,eAFF,eAOE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAUGV,MAAM,CAACuB,GAAP,CAAW,UAACC,KAAD;AAAA,4BACV,QAAC,KAAD;AAAmB,UAAA,QAAQ,EAAC,OAA5B;AAAA,oBACGA;AADH,WAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CAnED;;GAAM3B,K;UAEoCD,U;;;KAFpCC,K;AAqEN,eAAeA,KAAf","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst Login = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n\n  const [errors, setErrors] = useState<string[]>([]);\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const loginAccount = () => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        //        console.log(data);\n        if (data[\"errors\"]) {\n          let newErrors: string[] = [];\n          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n          setErrors(newErrors);\n        } else {\n          setErrors([]);\n          console.log(data[\"accounts\"][0].uuid);\n          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n          console.log(\"user uuid cookie set\");\n        }\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      {console.log()}\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        <input value={email} onChange={handleEmailChange} />\n        <input\n          value={password}\n          type=\"password\"\n          onChange={handlePasswordChange}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}