{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState, useContext } from \"react\";\nimport FormInput from \"./util/FormInput\";\nimport { SignUpContext } from \".\"; // export const SignUpContext = createContext<AccountInterface>(undefined);\n\nvar SignUp = function SignUp() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // final values\n  var _useState = useState(true),\n      bool = _useState[0],\n      setBool = _useState[1];\n\n  var _useState2 = useState(false),\n      shouldChange = _useState2[0],\n      setShouldChange = _useState2[1]; //   const account = useContext(SignUpContext);\n  //   const account: AccountInterface = {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     username: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   };\n\n\n  var inputs = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  var helperTexts = [\"\", \"\", \"Get creative!\", \"Your email won't be shared.\", \"Passwords are hashed.\"];\n  var inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  var initiateChange = function initiateChange() {\n    setShouldChange(!shouldChange);\n    setBool(!bool); // console.log(\"initiateChange() account: \", account);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    _s();\n\n    e.preventDefault();\n    initiateChange();\n    var account = useContext(SignUpContext);\n    createAccount(account);\n  };\n\n  _s(handleSubmit, \"lRFMD/xwQFk8SphWKwZMM3QiXsc=\");\n\n  var createAccount = function createAccount(account) {\n    console.log(\"createAccount() account: \", account);\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(account)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <SignUpContext.Provider value={account}>\n    _jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: handleSubmit,\n        children: [inputs.map(function (input, i) {\n          return /*#__PURE__*/_jsxDEV(FormInput, {\n            id: \"\".concat(input, \"-input\"),\n            signUpShouldChange: shouldChange,\n            logInShouldChange: false,\n            inputLabel: input,\n            helperText: helperTexts[i],\n            isRequired: true,\n            inputType: inputTypes[i]\n          }, input, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, _this) // </SignUpContext.Provider>\n\n  );\n};\n\n_s2(SignUp, \"m+zh6Z6rpNqlAM4EExgziObXL+4=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Box","Button","Typography","useState","useContext","FormInput","SignUpContext","SignUp","bool","setBool","shouldChange","setShouldChange","inputs","helperTexts","inputTypes","initiateChange","handleSubmit","e","preventDefault","account","createAccount","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","map","input","i"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,SAASC,QAAT,EAAkCC,UAAlC,QAAoD,OAApD;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,aAAT,QAA8B,GAA9B,C,CAEA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA;;AACnB;AADmB,kBAEKJ,QAAQ,CAAU,IAAV,CAFb;AAAA,MAEZK,IAFY;AAAA,MAENC,OAFM;;AAAA,mBAGqBN,QAAQ,CAAC,KAAD,CAH7B;AAAA,MAGZO,YAHY;AAAA,MAGEC,eAHF,kBAInB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAgB,GAAG,CACvB,YADuB,EAEvB,WAFuB,EAGvB,UAHuB,EAIvB,OAJuB,EAKvB,UALuB,CAAzB;AAOA,MAAMC,WAAqB,GAAG,CAC5B,EAD4B,EAE5B,EAF4B,EAG5B,eAH4B,EAI5B,6BAJ4B,EAK5B,uBAL4B,CAA9B;AAOA,MAAMC,UAAoB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,UAAlC,CAA7B;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BJ,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACAD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP,CAF2B,CAG3B;AACD,GAJD;;AAMA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAuC;AAAA;;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc;AACd,QAAMI,OAAO,GAAGf,UAAU,CAACE,aAAD,CAA1B;AACAc,IAAAA,aAAa,CAACD,OAAD,CAAb;AACD,GALD;;AApCmB,KAoCbH,YApCa;;AA2CnB,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACD,OAAD,EAA+B;AACnDE,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,OAAzC;AACAI,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AALuC,KAA1C,CAAL,CAOGU,IAPH,CAOQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD;AAAA,aAAUX,OAAO,CAACC,GAAR,CAAYU,IAAZ,CAAV;AAAA,KARR;AASD,GAXD;;AAaA;AAAA;AACE;AACA,YAAC,GAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,MAAM,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAEhB,YAA9B;AAAA,mBACGJ,MAAM,CAACqB,GAAP,CAAW,UAACC,KAAD,EAAgBC,CAAhB;AAAA,8BACV,QAAC,SAAD;AAEE,YAAA,EAAE,YAAKD,KAAL,WAFJ;AAGE,YAAA,kBAAkB,EAAExB,YAHtB;AAIE,YAAA,iBAAiB,EAAE,KAJrB;AAKE,YAAA,UAAU,EAAEwB,KALd;AAME,YAAA,UAAU,EAAErB,WAAW,CAACsB,CAAD,CANzB;AAOE,YAAA,UAAU,EAAE,IAPd;AAQE,YAAA,SAAS,EAAErB,UAAU,CAACqB,CAAD;AARvB,aACOD,KADP;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAX,CADH,eAaE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAsBE;;AAtBF;AAwBD,CAhFD;;IAAM3B,M;;KAAAA,M;AAkFN,eAAeA,MAAf","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState, createContext, useContext } from \"react\";\n\nimport FormInput from \"./util/FormInput\";\nimport AccountInterface from \"./interfaces/AccountInterface\";\nimport { SignUpContext } from \".\";\n\n// export const SignUpContext = createContext<AccountInterface>(undefined);\n\nconst SignUp = () => {\n  // final values\n  const [bool, setBool] = useState<boolean>(true);\n  const [shouldChange, setShouldChange] = useState(false);\n  //   const account = useContext(SignUpContext);\n\n  //   const account: AccountInterface = {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     username: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   };\n\n  const inputs: string[] = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const helperTexts: string[] = [\n    \"\",\n    \"\",\n    \"Get creative!\",\n    \"Your email won't be shared.\",\n    \"Passwords are hashed.\",\n  ];\n  const inputTypes: string[] = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n    setBool(!bool);\n    // console.log(\"initiateChange() account: \", account);\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    initiateChange();\n    const account = useContext(SignUpContext);\n    createAccount(account);\n  };\n\n  const createAccount = (account: AccountInterface) => {\n    console.log(\"createAccount() account: \", account);\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data));\n  };\n\n  return (\n    // <SignUpContext.Provider value={account}>\n    <Box>\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input: string, i: number) => (\n          <FormInput\n            key={input}\n            id={`${input}-input`}\n            signUpShouldChange={shouldChange}\n            logInShouldChange={false}\n            inputLabel={input}\n            helperText={helperTexts[i]}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </Box>\n    // </SignUpContext.Provider>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}