{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport Draggable from \"react-draggable\"; // import { ResizableBox } from \"react-resizable\";\n// import classnames from \"classnames\";\n\nimport { Resizable } from \"re-resizable\";\nimport { Fragment } from \"react\";\nimport styles from \"../../styles/Image.module.scss\";\n\nvar Image = function Image(_ref) {\n  _s();\n\n  var uuid = _ref.uuid,\n      url = _ref.url,\n      xPos = _ref.xPos,\n      yPos = _ref.yPos,\n      rot = _ref.rot,\n      width = _ref.width,\n      height = _ref.height;\n  // set variable\n  var imgRef = useRef();\n\n  var getData = function getData(imgRef) {\n    if (imgRef.current !== undefined) {\n      console.log(imgRef.current.getBoundingClientRect());\n      console.log(screen.width, screen.height);\n      var xPct = 100 * imgRef.current.getBoundingClientRect().left / screen.width;\n      var yPct = 100 * imgRef.current.getBoundingClientRect().top / screen.height;\n      var _height = imgRef.current.getBoundingClientRect().height;\n      var _width = imgRef.current.getBoundingClientRect().width;\n      console.log(xPct, yPct);\n    }\n  }; // const [curXPos, setCurXPos] = useState<number>(xPos);\n  // const [curYPos, setCurYPos] = useState<number>(yPos);\n\n\n  var _useState = useState(rot),\n      curRot = _useState[0],\n      setCurRot = _useState[1];\n\n  var _useState2 = useState(width),\n      curWidth = _useState2[0],\n      setCurWidth = _useState2[1];\n\n  var _useState3 = useState(height),\n      curHeight = _useState3[0],\n      setCurHeight = _useState3[1];\n\n  var changeWidth = function changeWidth(diff) {\n    setCurWidth(function (curWidth) {\n      return curWidth + diff;\n    });\n  };\n\n  var changeHeight = function changeHeight(diff) {\n    setCurHeight(function (curHeight) {\n      return curHeight + diff;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Resizable, {\n      size: {\n        width: curWidth,\n        height: curHeight\n      },\n      onResizeStop: function onResizeStop(e, direction, ref, d) {\n        changeWidth(d.width);\n        changeHeight(d.height);\n      },\n      children: /*#__PURE__*/_jsxDEV(Draggable, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.draggableDiv,\n          style: {\n            width: \"\".concat(width, \"px\"),\n            height: \"\".concat(height, \"px\")\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.innerDiv,\n            style: {\n              width: \"\".concat(width, \"px\"),\n              height: \"\".concat(height, \"px\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            className: styles.img,\n            ref: imgRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Image, \"9alaiwp3GkH84LYYAypv4r15yCg=\");\n\n_c = Image;\nexport default Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx"],"names":["useState","useRef","Draggable","Resizable","Fragment","styles","Image","uuid","url","xPos","yPos","rot","width","height","imgRef","getData","current","undefined","console","log","getBoundingClientRect","screen","xPct","left","yPct","top","curRot","setCurRot","curWidth","setCurWidth","curHeight","setCurHeight","changeWidth","diff","changeHeight","e","direction","ref","d","draggableDiv","innerDiv","img"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\n// import { ResizableBox } from \"react-resizable\";\n// import classnames from \"classnames\";\nimport { Resizable } from \"re-resizable\";\nimport { MutableRefObject, Fragment } from \"react\";\n\nimport styles from \"../../styles/Image.module.scss\";\n\nimport { ImageInterface } from \"../interfaces/ImageInterface\";\n\nconst Image: React.FC<ImageInterface> = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height,\n}) => {\n  // set variable\n  const imgRef = useRef();\n\n  const getData = (imgRef: MutableRefObject<undefined>) => {\n    if (imgRef.current !== undefined) {\n      console.log(imgRef.current.getBoundingClientRect());\n      console.log(screen.width, screen.height);\n      const xPct =\n        (100 * imgRef.current.getBoundingClientRect().left) / screen.width;\n      const yPct =\n        (100 * imgRef.current.getBoundingClientRect().top) / screen.height;\n      const height = imgRef.current.getBoundingClientRect().height;\n      const width = imgRef.current.getBoundingClientRect().width;\n      console.log(xPct, yPct);\n    }\n  };\n\n  // const [curXPos, setCurXPos] = useState<number>(xPos);\n  // const [curYPos, setCurYPos] = useState<number>(yPos);\n  const [curRot, setCurRot] = useState<number>(rot);\n  const [curWidth, setCurWidth] = useState<number>(width);\n  const [curHeight, setCurHeight] = useState<number>(height);\n\n  const changeWidth = (diff: number) => {\n    setCurWidth((curWidth) => curWidth + diff);\n  };\n  const changeHeight = (diff: number) => {\n    setCurHeight((curHeight) => curHeight + diff);\n  };\n\n  return (\n    <Fragment>\n      {/* <ResizableBox\n        width={200}\n        height={200}\n        maxConstraints={[300, 300]}\n        minConstraints={[100, 100]}\n      > */}\n      <Resizable\n        size={{ width: curWidth, height: curHeight }}\n        onResizeStop={(e, direction, ref, d) => {\n          changeWidth(d.width);\n          changeHeight(d.height);\n        }}\n      >\n        <Draggable>\n          <div\n            className={styles.draggableDiv}\n            style={{ width: `${width}px`, height: `${height}px` }}\n          >\n            <div\n              className={styles.innerDiv}\n              style={{ width: `${width}px`, height: `${height}px` }}\n            />\n            <img src={url} className={styles.img} ref={imgRef} />\n            {/* <div className={styles.resizer}></div> */}\n          </div>\n        </Draggable>\n      </Resizable>\n      {/* </ResizableBox> */}\n      {/* divs for resizing */}\n      {/* <button onClick={() => getData(imgRef)}>Click me</button> */}\n    </Fragment>\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}