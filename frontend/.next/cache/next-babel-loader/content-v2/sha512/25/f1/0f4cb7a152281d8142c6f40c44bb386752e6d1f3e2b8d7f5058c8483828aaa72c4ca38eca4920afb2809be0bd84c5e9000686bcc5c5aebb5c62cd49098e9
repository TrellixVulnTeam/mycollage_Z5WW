{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx\";\nimport { Box, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\n\nconst Collage = () => {\n  const {\n    0: isFileError,\n    1: setIsFileError\n  } = useState(false);\n  const errorText = \"File type not valid\";\n  const {\n    0: image,\n    1: setImage\n  } = useState(null);\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query;\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = e => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: [console.log(image), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isFileError && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorText\n    }, errorText, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Collage;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx"],"names":["Box","Button","Alert","useRouter","useState","Collage","isFileError","setIsFileError","errorText","image","setImage","router","uuid","query","imageTypes","handleImageChange","e","fileName","target","files","name","periodIdx","lastIndexOf","includes","slice","console","log"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAAwC,mBAAxC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCH,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAMI,SAAS,GAAG,qBAAlB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AACA,QAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAnB;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnC;AACA,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,WAAT,CAAqB,GAArB,CAAlB;;AACA,QAAI,CAACR,UAAU,CAACS,QAAX,CAAoBN,QAAQ,CAACO,KAAT,CAAeH,SAAS,GAAG,CAA3B,CAApB,CAAL,EAAyD;AACvDd,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAND;;AAQA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,SAAS,EAAC,OAAtC;AAAA,iBAGGkB,OAAO,CAACC,GAAR,CAAYjB,KAAZ,CAHH,eAIE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD;AAH3B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGb,WAAW,iBACV,QAAC,KAAD;AAAuB,MAAA,QAAQ,EAAC,OAAhC;AAAA,gBACGE;AADH,OAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApCD;;AAsCA,eAAeH,OAAf","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport FormInput from \"../util/components/FormInput\";\n\nconst Collage = () => {\n  const [isFileError, setIsFileError] = useState<boolean>(false);\n  const errorText = \"File type not valid\";\n  const [image, setImage] = useState(null);\n\n  const router = useRouter();\n  const { uuid } = router.query;\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = (e) => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n    }\n  };\n\n  return (\n    <Box>\n      <Button variant=\"contained\" component=\"label\">\n        {/* Upload File */}\n        {/* <input type=\"file\" hidden /> */}\n        {console.log(image)}\n        <input\n          id=\"file-upload\"\n          type=\"file\"\n          onChange={(e) => setImage(e.target.files[0])}\n        />\n      </Button>\n      {isFileError && (\n        <Alert key={errorText} severity=\"error\">\n          {errorText}\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default Collage;\n"]},"metadata":{},"sourceType":"module"}