{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/util/FormInput.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FormControl, InputLabel, Input, FormHelperText } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst FormInput = ({\n  id,\n  origAccount,\n  changeAccount,\n  shouldChange,\n  inputLabel,\n  helperText = \"\",\n  isRequired = false,\n  inputType = \"text\"\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n\n  if (shouldChange) {\n    const newAccount = _objectSpread({}, origAccount);\n\n    if (inputLabel == \"First name\") newAccount.firstName = value;\n    if (inputLabel == \"Last name\") newAccount.lastName = value;\n    if (inputLabel == \"Username\") newAccount.username = value;\n    if (inputLabel == \"Email\") newAccount.email = value;\n    if (inputLabel == \"Password\") newAccount.password = value;\n    changeAccount(newAccount);\n  }\n\n  const handleValueChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    id: \"formcontrol\",\n    children: [console.log(\"shouldChange: \", shouldChange), /*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"input\",\n      \"aria-describedby\": \"helper-text\",\n      children: inputLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: id,\n      required: isRequired,\n      type: inputType,\n      value: value,\n      onChange: handleValueChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n      id: \"helper-text\",\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FormInput;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/util/FormInput.tsx"],"names":["FormControl","InputLabel","Input","FormHelperText","React","useState","FormInput","id","origAccount","changeAccount","shouldChange","inputLabel","helperText","isRequired","inputType","value","setValue","newAccount","firstName","lastName","username","email","password","handleValueChange","e","target","console","log"],"mappings":";;;;;;;;;AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,cAJF,QAKO,mBALP;AAMA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAKA,MAAMC,SAAuC,GAAG,CAAC;AAC/CC,EAAAA,EAD+C;AAE/CC,EAAAA,WAF+C;AAG/CC,EAAAA,aAH+C;AAI/CC,EAAAA,YAJ+C;AAK/CC,EAAAA,UAL+C;AAM/CC,EAAAA,UAAU,GAAG,EANkC;AAO/CC,EAAAA,UAAU,GAAG,KAPkC;AAQ/CC,EAAAA,SAAS,GAAG;AARmC,CAAD,KAS1C;AACJ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MAAIK,YAAJ,EAAkB;AAChB,UAAMO,UAA4B,qBAAQT,WAAR,CAAlC;;AACA,QAAIG,UAAU,IAAI,YAAlB,EAAgCM,UAAU,CAACC,SAAX,GAAuBH,KAAvB;AAChC,QAAIJ,UAAU,IAAI,WAAlB,EAA+BM,UAAU,CAACE,QAAX,GAAsBJ,KAAtB;AAC/B,QAAIJ,UAAU,IAAI,UAAlB,EAA8BM,UAAU,CAACG,QAAX,GAAsBL,KAAtB;AAC9B,QAAIJ,UAAU,IAAI,OAAlB,EAA2BM,UAAU,CAACI,KAAX,GAAmBN,KAAnB;AAC3B,QAAIJ,UAAU,IAAI,UAAlB,EAA8BM,UAAU,CAACK,QAAX,GAAsBP,KAAtB;AAE9BN,IAAAA,aAAa,CAACQ,UAAD,CAAb;AACD;;AAED,QAAMM,iBAAiB,GAAIC,CAAD,IAEpB;AACJR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAC,aAAhB;AAAA,eACGW,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BjB,YAA9B,CADH,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,0BAAiB,aAA7C;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,KAAD;AACE,MAAA,EAAE,EAAEJ,EADN;AAEE,MAAA,QAAQ,EAAEM,UAFZ;AAGE,MAAA,IAAI,EAAEC,SAHR;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,QAAQ,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,YALF,eAYE,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,aAAnB;AAAA,gBAAkCX;AAAlC;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7CD;;AA+CA,eAAeN,SAAf","sourcesContent":["import {\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nimport FormInputInterface from \"../interfaces/FormInputInterface\";\nimport AccountInterface from \"../interfaces/AccountInterface\";\n\nconst FormInput: React.FC<FormInputInterface> = ({\n  id,\n  origAccount,\n  changeAccount,\n  shouldChange,\n  inputLabel,\n  helperText = \"\",\n  isRequired = false,\n  inputType = \"text\",\n}) => {\n  const [value, setValue] = useState(\"\");\n\n  if (shouldChange) {\n    const newAccount: AccountInterface = { ...origAccount };\n    if (inputLabel == \"First name\") newAccount.firstName = value;\n    if (inputLabel == \"Last name\") newAccount.lastName = value;\n    if (inputLabel == \"Username\") newAccount.username = value;\n    if (inputLabel == \"Email\") newAccount.email = value;\n    if (inputLabel == \"Password\") newAccount.password = value;\n\n    changeAccount(newAccount);\n  }\n\n  const handleValueChange = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl id=\"formcontrol\">\n      {console.log(\"shouldChange: \", shouldChange)}\n      <InputLabel htmlFor=\"input\" aria-describedby=\"helper-text\">\n        {inputLabel}\n      </InputLabel>\n      <Input\n        id={id}\n        required={isRequired}\n        type={inputType}\n        value={value}\n        onChange={handleValueChange}\n      />\n      <FormHelperText id=\"helper-text\">{helperText}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}