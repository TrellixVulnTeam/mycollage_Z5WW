{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx\";\nimport { useState } from \"react\";\nimport styles from \"../../styles/Image.module.scss\";\n\nconst Image = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height\n}) => {\n  let diffX = 0;\n  let diffY = 0;\n  let dragging = false;\n  let posObj = {};\n\n  const dragStart = e => {\n    diffX = e.screenX - e.currentTarget.getBoundingClientRect().left;\n    diffY = e.screenY - e.currentTarget.getBoundingClientRect().top;\n    dragging = true;\n  };\n\n  const drag = e => {\n    if (dragging) {\n      const left = e.screenX - diffX;\n      const top = e.screenY - diffY;\n      posObj = {\n        left: left,\n        top: top\n      };\n    }\n  };\n\n  const dragEnd = e => {\n    dragging = false;\n  }; // const div: MutableRefObject<undefined> = useRef();\n  // dragElement(div);\n  // set variable\n\n\n  const {\n    0: curXPos,\n    1: setCurXPos\n  } = useState(xPos);\n  const {\n    0: curYPos,\n    1: setCurYPos\n  } = useState(yPos);\n  const {\n    0: curRot,\n    1: setCurRot\n  } = useState(rot);\n  const {\n    0: curWidth,\n    1: setCurWidth\n  } = useState(width);\n  const {\n    0: curHeight,\n    1: setCurHeight\n  } = useState(height);\n  return (\n    /*#__PURE__*/\n    // <div className={posObj.draggableDiv} ref={div} draggable>\n    _jsxDEV(\"div\", {\n      style: posObj,\n      className: styles.draggableDiv,\n      onMouseDown: dragStart,\n      onMouseMove: drag,\n      onMouseUp: dragEnd,\n      draggable: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nexport default Image;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx"],"names":["useState","styles","Image","uuid","url","xPos","yPos","rot","width","height","diffX","diffY","dragging","posObj","dragStart","e","screenX","currentTarget","getBoundingClientRect","left","screenY","top","drag","dragEnd","curXPos","setCurXPos","curYPos","setCurYPos","curRot","setCurRot","curWidth","setCurWidth","curHeight","setCurHeight","draggableDiv"],"mappings":";;AAAA,SAASA,QAAT,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAIA,MAAMC,KAA+B,GAAG,CAAC;AACvCC,EAAAA,IADuC;AAEvCC,EAAAA,GAFuC;AAGvCC,EAAAA,IAHuC;AAIvCC,EAAAA,IAJuC;AAKvCC,EAAAA,GALuC;AAMvCC,EAAAA,KANuC;AAOvCC,EAAAA;AAPuC,CAAD,KAQlC;AACJ,MAAIC,KAAa,GAAG,CAApB;AACA,MAAIC,KAAa,GAAG,CAApB;AACA,MAAIC,QAAiB,GAAG,KAAxB;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBL,IAAAA,KAAK,GAAGK,CAAC,CAACC,OAAF,GAAYD,CAAC,CAACE,aAAF,CAAgBC,qBAAhB,GAAwCC,IAA5D;AACAR,IAAAA,KAAK,GAAGI,CAAC,CAACK,OAAF,GAAYL,CAAC,CAACE,aAAF,CAAgBC,qBAAhB,GAAwCG,GAA5D;AACAT,IAAAA,QAAQ,GAAG,IAAX;AACD,GAJD;;AAMA,QAAMU,IAAI,GAAIP,CAAD,IAAO;AAClB,QAAIH,QAAJ,EAAc;AACZ,YAAMO,IAAI,GAAGJ,CAAC,CAACC,OAAF,GAAYN,KAAzB;AACA,YAAMW,GAAG,GAAGN,CAAC,CAACK,OAAF,GAAYT,KAAxB;AAEAE,MAAAA,MAAM,GAAG;AACPM,QAAAA,IAAI,EAAEA,IADC;AAEPE,QAAAA,GAAG,EAAEA;AAFE,OAAT;AAID;AACF,GAVD;;AAYA,QAAME,OAAO,GAAIR,CAAD,IAAO;AACrBH,IAAAA,QAAQ,GAAG,KAAX;AACD,GAFD,CAxBI,CA4BJ;AACA;AAEA;;;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBzB,QAAQ,CAACK,IAAD,CAAtC;AACA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwB3B,QAAQ,CAACM,IAAD,CAAtC;AACA,QAAM;AAAA,OAACsB,MAAD;AAAA,OAASC;AAAT,MAAsB7B,QAAQ,CAACO,GAAD,CAApC;AACA,QAAM;AAAA,OAACuB,QAAD;AAAA,OAAWC;AAAX,MAA0B/B,QAAQ,CAACQ,KAAD,CAAxC;AACA,QAAM;AAAA,OAACwB,SAAD;AAAA,OAAYC;AAAZ,MAA4BjC,QAAQ,CAACS,MAAD,CAA1C;AAEA;AAAA;AACE;AACA;AACE,MAAA,KAAK,EAAEI,MADT;AAEE,MAAA,SAAS,EAAEZ,MAAM,CAACiC,YAFpB;AAGE,MAAA,WAAW,EAAEpB,SAHf;AAIE,MAAA,WAAW,EAAEQ,IAJf;AAKE,MAAA,SAAS,EAAEC,OALb;AAME,MAAA,SAAS,MANX;AAAA,6BAQE;AAAK,QAAA,GAAG,EAAEnB;AAAV;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AAFF;AAaD,CA3DD;;AA6DA,eAAeF,KAAf","sourcesContent":["import { useState, useRef, MutableRefObject } from \"react\";\n\nimport styles from \"../../styles/Image.module.scss\";\n\nimport { ImageInterface } from \"../interfaces/ImageInterface\";\n\nconst Image: React.FC<ImageInterface> = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height,\n}) => {\n  let diffX: number = 0;\n  let diffY: number = 0;\n  let dragging: boolean = false;\n  let posObj = {};\n\n  const dragStart = (e) => {\n    diffX = e.screenX - e.currentTarget.getBoundingClientRect().left;\n    diffY = e.screenY - e.currentTarget.getBoundingClientRect().top;\n    dragging = true;\n  };\n\n  const drag = (e) => {\n    if (dragging) {\n      const left = e.screenX - diffX;\n      const top = e.screenY - diffY;\n\n      posObj = {\n        left: left,\n        top: top,\n      };\n    }\n  };\n\n  const dragEnd = (e) => {\n    dragging = false;\n  };\n\n  // const div: MutableRefObject<undefined> = useRef();\n  // dragElement(div);\n\n  // set variable\n  const [curXPos, setCurXPos] = useState(xPos);\n  const [curYPos, setCurYPos] = useState(yPos);\n  const [curRot, setCurRot] = useState(rot);\n  const [curWidth, setCurWidth] = useState(width);\n  const [curHeight, setCurHeight] = useState(height);\n\n  return (\n    // <div className={posObj.draggableDiv} ref={div} draggable>\n    <div\n      style={posObj}\n      className={styles.draggableDiv}\n      onMouseDown={dragStart}\n      onMouseMove={drag}\n      onMouseUp={dragEnd}\n      draggable\n    >\n      <img src={url} />\n    </div>\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}