{"ast":null,"code":"import _defineProperty from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\n\nvar Collage = function Collage() {\n  _s();\n\n  var _useState = useState([]),\n      finalImages = _useState[0],\n      setFinalImages = _useState[1]; // for when we need to store image data in the end\n\n\n  var _useState2 = useState([{\n    uuid: 1,\n    url: \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 300,\n    height: 300\n  }, {\n    uuid: 2,\n    url: \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 640,\n    height: 425\n  }]),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var router = useRouter();\n  var uuid = router.query.uuid; //            <Box width={5 / 6} height={5 / 6} border={2} color=\"red\" mx=\"auto\">\n  //            </Box>\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this), images.map(function (image) {\n      return /*#__PURE__*/_jsxDEV(Image, _objectSpread({}, image), image.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Collage, \"kQ7qoPx2Sv0c/+Ejkc/9nYR/8WE=\", false, function () {\n  return [useRouter];\n});\n\n_c = Collage;\nexport default Collage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collage\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx"],"names":["Box","useRouter","useState","FileUpload","Image","Collage","finalImages","setFinalImages","uuid","url","xPos","yPos","rot","width","height","images","setImages","router","query","map","image"],"mappings":";;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,mBAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAChB;AAAA;;AAAA,kBAC0CH,QAAQ,CAAmB,EAAnB,CADlD;AAAA,MACWI,WADX;AAAA,MACwBC,cADxB,iBAC0E;;;AAD1E,mBAEgCL,QAAQ,CAAmB,CACnD;AACIM,IAAAA,IAAI,EAAE,CADV;AAEIC,IAAAA,GAAG,EACC,gFAHR;AAIIC,IAAAA,IAAI,EAAE,CAJV;AAKIC,IAAAA,IAAI,EAAE,CALV;AAMIC,IAAAA,GAAG,EAAE,CANT;AAOIC,IAAAA,KAAK,EAAE,GAPX;AAQIC,IAAAA,MAAM,EAAE;AARZ,GADmD,EAWnD;AACIN,IAAAA,IAAI,EAAE,CADV;AAEIC,IAAAA,GAAG,EACC,gGAHR;AAIIC,IAAAA,IAAI,EAAE,CAJV;AAKIC,IAAAA,IAAI,EAAE,CALV;AAMIC,IAAAA,GAAG,EAAE,CANT;AAOIC,IAAAA,KAAK,EAAE,GAPX;AAQIC,IAAAA,MAAM,EAAE;AARZ,GAXmD,CAAnB,CAFxC;AAAA,MAEWC,MAFX;AAAA,MAEmBC,SAFnB;;AAyBI,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;AAzBJ,MA0BWO,IA1BX,GA0BmBS,MAAM,CAACC,KA1B1B,CA0BWV,IA1BX,EA4BI;AACA;;AACA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA;AAAA;AAAA;AAAA,aAFJ,EAIKO,MAAM,CAACI,GAAP,CAAW,UAACC,KAAD;AAAA,0BACR,QAAC,KAAD,oBAA4BA,KAA5B,GAAYA,KAAK,CAACZ,IAAlB;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAX,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAzCD;;GAAMH,O;UA0BaJ,S;;;KA1BbI,O;AA2CN,eAAeA,OAAf","sourcesContent":["import {Box} from \"@material-ui/core\";\nimport {useRouter} from \"next/router\";\nimport {useState} from \"react\";\n\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\nimport {ImageInterface} from \"../interfaces/ImageInterface\";\n\nconst Collage = () =>\n{\n    const [finalImages, setFinalImages] = useState<ImageInterface[]>([]); // for when we need to store image data in the end\n    const [images, setImages] = useState<ImageInterface[]>([\n        {\n            uuid: 1,\n            url:\n                \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n            xPos: 1,\n            yPos: 1,\n            rot: 1,\n            width: 300,\n            height: 300,\n        } as ImageInterface,\n        {\n            uuid: 2,\n            url:\n                \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n            xPos: 1,\n            yPos: 1,\n            rot: 1,\n            width: 640,\n            height: 425,\n        } as ImageInterface,\n    ]);\n\n    const router = useRouter();\n    const {uuid} = router.query;\n\n    //            <Box width={5 / 6} height={5 / 6} border={2} color=\"red\" mx=\"auto\">\n    //            </Box>\n    return (\n        <Box>\n            <FileUpload />\n            <br />\n\n            {images.map((image) => (\n                <Image key={image.uuid} {...image} />\n            ))}\n        </Box>\n    );\n};\n\nexport default Collage;\n"]},"metadata":{},"sourceType":"module"}