{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/LogIn.tsx\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport FormInput from \"../util/components/FormInput\";\nimport { LogInContext } from \"../index\";\nimport { sleep } from \"../util/methods\";\n\nconst Login = () => {\n  const inputs = [\"Email\", \"Password\"];\n  const inputTypes = [\"email\", \"password\"];\n  const account = useContext(LogInContext);\n  const {\n    0: shouldChange,\n    1: setShouldChange\n  } = useState(false); // const [errors, setErrors] = useState<string[]>([]);\n\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n    sleep(5);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  const loginAccount = account => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(account)\n    }).then(res => res.json()).then(data => {\n      console.log(data); // if (data[\"errors\"].length > 0) {\n      //   let newErrors: string[] = [];\n      //   data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n      //   setErrors(newErrors);\n      // }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputs.map((input, i) => /*#__PURE__*/_jsxDEV(FormInput, {\n        id: `${input}-input`,\n        logInShouldChange: shouldChange,\n        signUpShouldChange: false,\n        inputLabel: input,\n        isRequired: true,\n        inputType: inputTypes[i]\n      }, input, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/LogIn.tsx"],"names":["Box","Typography","Button","React","useState","useContext","FormInput","LogInContext","sleep","Login","inputs","inputTypes","account","shouldChange","setShouldChange","initiateChange","handleSubmit","e","preventDefault","loginAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","map","input","i"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,mBAAxC;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,UAAV,CAAf;AACA,QAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,UAAV,CAAnB;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACE,YAAD,CAA1B;AAEA,QAAM;AAAA,OAACM,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAU,KAAV,CAAhD,CALkB,CAMlB;;AAEA,QAAMW,cAAc,GAAG,MAAM;AAC3BD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACAL,IAAAA,KAAK,CAAC,CAAD,CAAL;AACD,GAHD;;AAIA,QAAMQ,YAAY,GAAIC,CAAD,IAAuC;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc;AACdI,IAAAA,YAAY,CAACP,OAAD,CAAZ;AACD,GAJD;;AAMA,QAAMO,YAAY,GAAIP,OAAD,IAA+B;AAClDQ,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFmC;AAK5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,OAAf;AALsC,KAAzC,CAAL,CAOGc,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADc,CAEd;AACA;AACA;AACA;AACA;AACD,KAfH;AAgBD,GAjBD;;AAmBA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEb,YAA9B;AAAA,iBACGN,MAAM,CAACsB,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACV,QAAC,SAAD;AAEE,QAAA,EAAE,EAAG,GAAED,KAAM,QAFf;AAGE,QAAA,iBAAiB,EAAEpB,YAHrB;AAIE,QAAA,kBAAkB,EAAE,KAJtB;AAKE,QAAA,UAAU,EAAEoB,KALd;AAME,QAAA,UAAU,EAAE,IANd;AAOE,QAAA,SAAS,EAAEtB,UAAU,CAACuB,CAAD;AAPvB,SACOD,KADP;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/DD;;AAiEA,eAAexB,KAAf","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useState, useContext } from \"react\";\n\nimport FormInput from \"../util/components/FormInput\";\nimport { LogInContext } from \"../index\";\nimport AccountInterface from \"../interfaces/AccountInterface\";\nimport { sleep } from \"../util/methods\";\n\nconst Login = () => {\n  const inputs = [\"Email\", \"Password\"];\n  const inputTypes = [\"email\", \"password\"];\n  const account = useContext(LogInContext);\n\n  const [shouldChange, setShouldChange] = useState<boolean>(false);\n  // const [errors, setErrors] = useState<string[]>([]);\n\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n    sleep(5);\n  };\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  const loginAccount = (account: AccountInterface) => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        // if (data[\"errors\"].length > 0) {\n        //   let newErrors: string[] = [];\n        //   data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n        //   setErrors(newErrors);\n        // }\n      });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input, i) => (\n          <FormInput\n            key={input}\n            id={`${input}-input`}\n            logInShouldChange={shouldChange}\n            signUpShouldChange={false}\n            inputLabel={input}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {/* {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))} */}\n      </form>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}