{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Typography } from \"@material-ui/core\"; // import { Dispatch, SetStateAction, useState } from \"react\";\n\nimport { useState, createContext } from \"react\";\nimport FormInput from \"./util/FormInput\";\nexport var SignUpContext = /*#__PURE__*/createContext(undefined);\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  // final values\n  var _useState = useState(true),\n      bool = _useState[0],\n      setBool = _useState[1];\n\n  var _useState2 = useState(false),\n      shouldChange = _useState2[0],\n      setShouldChange = _useState2[1];\n\n  var _useState3 = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      account = _useState3[0],\n      setAccount = _useState3[1];\n\n  var inputs = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  var helperTexts = [\"\", \"\", \"Get creative!\", \"Your email won't be shared.\", \"Passwords are hashed.\"];\n  var inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  var initiateChange = function initiateChange() {\n    setShouldChange(true);\n    setBool(!bool);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); // setShouldChange(true);\n\n    initiateChange();\n    console.log(\"hi\");\n  };\n\n  var createAccount = function createAccount(account) {\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      body: JSON.stringify(account)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContext.Provider, {\n    value: account,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: handleSubmit,\n        children: [inputs.map(function (input, i) {\n          return /*#__PURE__*/_jsxDEV(FormInput, {\n            id: \"\".concat(input, \"-input\"),\n            shouldChange: shouldChange,\n            inputLabel: input,\n            helperText: helperTexts[i],\n            isRequired: true,\n            inputType: inputTypes[i]\n          }, input, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"m5be9oJFfROCZxpLhCGwiKy/7QY=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Box","Button","Typography","useState","createContext","FormInput","SignUpContext","undefined","HomePage","bool","setBool","shouldChange","setShouldChange","firstName","lastName","username","email","password","account","setAccount","inputs","helperTexts","inputTypes","initiateChange","handleSubmit","e","preventDefault","console","log","createAccount","fetch","method","body","JSON","stringify","then","res","json","data","map","input","i"],"mappings":"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","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\n// import { Dispatch, SetStateAction, useState } from \"react\";\nimport { useState, createContext } from \"react\";\n\nimport FormInput from \"./util/FormInput\";\nimport AccountInterface from \"./interfaces/AccountInterface\";\n\nexport const SignUpContext = createContext<AccountInterface>(undefined);\n\nfunction HomePage() {\n  // final values\n  const [bool, setBool] = useState<boolean>(true);\n  const [shouldChange, setShouldChange] = useState(false);\n\n  const [account, setAccount] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  } as AccountInterface);\n\n  const inputs: string[] = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const helperTexts: string[] = [\n    \"\",\n    \"\",\n    \"Get creative!\",\n    \"Your email won't be shared.\",\n    \"Passwords are hashed.\",\n  ];\n  const inputTypes: string[] = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const initiateChange = () => {\n    setShouldChange(true);\n    setBool(!bool);\n  };\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    // setShouldChange(true);\n    initiateChange();\n    console.log(\"hi\");\n  };\n\n  const createAccount = (account: AccountInterface) => {\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data));\n  };\n\n  return (\n    <SignUpContext.Provider value={account}>\n      <Box>\n        <Typography variant=\"h2\">Sign Up</Typography>\n        <form method=\"POST\" onSubmit={handleSubmit}>\n          {inputs.map((input: string, i: number) => (\n            <FormInput\n              key={input}\n              id={`${input}-input`}\n              shouldChange={shouldChange}\n              inputLabel={input}\n              helperText={helperTexts[i]}\n              isRequired={true}\n              inputType={inputTypes[i]}\n            />\n          ))}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </form>\n      </Box>\n    </SignUpContext.Provider>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}