{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from \"next/link\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nvar Login = function Login() {\n  _s();\n\n  // set user-uuid cookie\n  var _useCookies = useCookies([\"userUUID\"]),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      userIDCookie = _useCookies2[0],\n      setUserIDCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var inputTypes = [\"email\", \"password\"];\n  var inputLabels = [\"Email\", \"Password\"];\n  var values = [email, password];\n  var setValues = [setEmail, setPassword];\n\n  var loginAccount = function loginAccount() {\n    console.log(email, password);\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": \"true\",\n        \"Access-Control-Allow-Headers\": \"Set-Cookie\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data);\n\n      if (data[\"errors\"]) {\n        var newErrors = [];\n        data[\"errors\"].map(function (error) {\n          return newErrors.push(error[\"message\"]);\n        });\n        setErrors(newErrors);\n      } else {\n        setErrors([]);\n        setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, {\n          path: \"/\"\n        });\n      }\n    });\n  };\n\n  var getUserUUID = function getUserUUID() {\n    fetch(\"http://localhost:5000/accounts/retrieveUUID\", {\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data);\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputTypes.map(function (inputType, i) {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          id: \"\".concat(inputLabels[i].toLowerCase(), \"-input\"),\n          inputLabel: inputLabels[i],\n          inputType: inputType,\n          isRequired: true,\n          value: values[i],\n          setValue: setValues[i]\n        }, inputLabels[i], false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this), errors.map(function (error) {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: getUserUUID,\n      children: \"Get UUUID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/signup\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"khFsboo+HBEoLTG6HCSEeQ9bKvg=\", false, function () {\n  return [useCookies];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx"],"names":["Link","Box","Typography","Button","Alert","React","useState","useCookies","FormInput","Login","userIDCookie","setUserIDCookie","errors","setErrors","email","setEmail","password","setPassword","inputTypes","inputLabels","values","setValues","loginAccount","console","log","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","data","newErrors","map","error","push","uuid","path","getUserUUID","handleSubmit","e","preventDefault","inputType","i","toLowerCase"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Link from \"next/link\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst Login = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const inputTypes = [\"email\", \"password\"];\n  const inputLabels = [\"Email\", \"Password\"];\n  const values = [email, password];\n  const setValues = [setEmail, setPassword];\n\n  const loginAccount = () => {\n    console.log(email, password);\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": \"true\",\n        \"Access-Control-Allow-Headers\": \"Set-Cookie\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        if (data[\"errors\"]) {\n          let newErrors: string[] = [];\n          data[\"errors\"].map((error: { [x: string]: string }) =>\n            newErrors.push(error[\"message\"])\n          );\n          setErrors(newErrors);\n        } else {\n          setErrors([]);\n          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n        }\n      });\n  };\n\n  const getUserUUID = () => {\n    fetch(\"http://localhost:5000/accounts/retrieveUUID\", {\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n      });\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputTypes.map((inputType, i) => (\n          <FormInput\n            key={inputLabels[i]}\n            id={`${inputLabels[i].toLowerCase()}-input`}\n            inputLabel={inputLabels[i]}\n            inputType={inputType}\n            isRequired={true}\n            value={values[i]}\n            setValue={setValues[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n      <Button variant=\"contained\" color=\"primary\" onClick={getUserUUID}>\n        Get UUUID\n      </Button>\n      <Link href=\"/signup\">\n        <a>Create Account</a>\n      </Link>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}