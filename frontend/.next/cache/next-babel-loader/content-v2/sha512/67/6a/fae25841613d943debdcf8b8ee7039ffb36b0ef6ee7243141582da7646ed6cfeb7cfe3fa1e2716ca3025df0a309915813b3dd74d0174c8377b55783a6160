{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nvar Login = function Login() {\n  _s();\n\n  // set user-uuid cookie\n  var _useCookies = useCookies([\"userUUID\"]),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      userIDCookie = _useCookies2[0],\n      setUserIDCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      errors = _useState[0],\n      setErrors = _useState[1]; //  const inputs = [\"Email\", \"Password\"];\n  //  const inputTypes = [\"email\", \"password\"];\n\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1]; //  const handleEmailChange = (e) => {\n  //    setEmail(e.target.value);\n  //  };\n  //\n  //  const handlePasswordChange = (e) => {\n  //    setPassword(e.target.value);\n  //  };\n\n\n  var loginAccount = function loginAccount() {\n    console.log(email, password); //    fetch(\"http://localhost:5000/accounts/login\", {\n    //      method: \"POST\",\n    //      headers: {\n    //        \"Content-Type\": \"application/json\",\n    //      },\n    //      body: JSON.stringify({ email, password }),\n    //    })\n    //      .then((res) => res.json())\n    //      .then((data) => {\n    //        //        console.log(data);\n    //        if (data[\"errors\"]) {\n    //          let newErrors: string[] = [];\n    //          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n    //          setErrors(newErrors);\n    //        } else {\n    //          setErrors([]);\n    //          console.log(data[\"accounts\"][0].uuid);\n    //          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n    //          console.log(\"user uuid cookie set\");\n    //        }\n    //      });\n  }; //        <input\n  //          type=\"email\"\n  //          value={email}\n  //          onChange={handleEmailChange}\n  //          placeholder=\"Email\"\n  //        />\n  //        <input\n  //          value={password}\n  //          type=\"password\"\n  //          onChange={handlePasswordChange}\n  //          placeholder=\"Password\"\n  //      />\n\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        id: \"email-input\" //              logInShouldChange={shouldChange}\n        //              signUpShouldChange={false}\n        ,\n        inputLabel: \"Email\",\n        isRequired: true,\n        value: email,\n        setValue: setEmail\n      }, \"email\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), errors.map(function (error) {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"khFsboo+HBEoLTG6HCSEeQ9bKvg=\", false, function () {\n  return [useCookies];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx"],"names":["Box","Typography","Button","Alert","React","useState","useCookies","FormInput","Login","userIDCookie","setUserIDCookie","errors","setErrors","email","setEmail","password","setPassword","loginAccount","console","log","handleSubmit","e","preventDefault","map","error"],"mappings":";;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB;AADkB,oBAEsBF,UAAU,CAAC,CAAC,UAAD,CAAD,CAFhC;AAAA;AAAA,MAEXG,YAFW;AAAA,MAEGC,eAFH;;AAAA,kBAGUL,QAAQ,CAAW,EAAX,CAHlB;AAAA,MAGXM,MAHW;AAAA,MAGHC,SAHG,iBAKlB;AACA;;;AANkB,mBAQQP,QAAQ,CAAS,EAAT,CARhB;AAAA,MAQXQ,KARW;AAAA,MAQJC,QARI;;AAAA,mBAScT,QAAQ,CAAS,EAAT,CATtB;AAAA,MASXU,QATW;AAAA,MASDC,WATC,kBAWlB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBE,QAAnB,EADyB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAvBD,CAnBkB,CA2ClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,YAAY;AACb,GAHD;;AAKA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEG,YAA9B;AAAA,8BACE,QAAC,SAAD;AAEE,QAAA,EAAE,eAFJ,CAGE;AACA;AAJF;AAKE,QAAA,UAAU,EAAC,OALb;AAME,QAAA,UAAU,EAAE,IANd;AAOE,QAAA,KAAK,EAAEP,KAPT;AAQE,QAAA,QAAQ,EAAEC;AARZ,SACM,OADN;AAAA;AAAA;AAAA;AAAA,eADF,eAWE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,EAcGH,MAAM,CAACY,GAAP,CAAW,UAACC,KAAD;AAAA,4BACV,QAAC,KAAD;AAAmB,UAAA,QAAQ,EAAC,OAA5B;AAAA,oBACGA;AADH,WAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAtFD;;GAAMhB,K;UAEoCF,U;;;KAFpCE,K;AAwFN,eAAeA,KAAf","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst Login = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  //  const inputs = [\"Email\", \"Password\"];\n  //  const inputTypes = [\"email\", \"password\"];\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  //  const handleEmailChange = (e) => {\n  //    setEmail(e.target.value);\n  //  };\n  //\n  //  const handlePasswordChange = (e) => {\n  //    setPassword(e.target.value);\n  //  };\n\n  const loginAccount = () => {\n    console.log(email, password);\n    //    fetch(\"http://localhost:5000/accounts/login\", {\n    //      method: \"POST\",\n    //      headers: {\n    //        \"Content-Type\": \"application/json\",\n    //      },\n    //      body: JSON.stringify({ email, password }),\n    //    })\n    //      .then((res) => res.json())\n    //      .then((data) => {\n    //        //        console.log(data);\n    //        if (data[\"errors\"]) {\n    //          let newErrors: string[] = [];\n    //          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n    //          setErrors(newErrors);\n    //        } else {\n    //          setErrors([]);\n    //          console.log(data[\"accounts\"][0].uuid);\n    //          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n    //          console.log(\"user uuid cookie set\");\n    //        }\n    //      });\n  };\n  //        <input\n  //          type=\"email\"\n  //          value={email}\n  //          onChange={handleEmailChange}\n  //          placeholder=\"Email\"\n  //        />\n  //        <input\n  //          value={password}\n  //          type=\"password\"\n  //          onChange={handlePasswordChange}\n  //          placeholder=\"Password\"\n  //      />\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        <FormInput\n          key=\"email\"\n          id={`email-input`}\n          //              logInShouldChange={shouldChange}\n          //              signUpShouldChange={false}\n          inputLabel=\"Email\"\n          isRequired={true}\n          value={email}\n          setValue={setEmail}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}