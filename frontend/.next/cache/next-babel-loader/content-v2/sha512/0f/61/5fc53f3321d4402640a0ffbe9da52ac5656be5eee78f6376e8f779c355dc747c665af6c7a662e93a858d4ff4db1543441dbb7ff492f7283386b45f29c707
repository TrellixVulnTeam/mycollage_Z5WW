{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\"; //import { ImageInterface } from \"../interfaces/ImageInterface\";\n\nconst Collage = () => {\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query;\n  const parentRef = useRef();\n  const {\n    0: leftBound,\n    1: setLeftBound\n  } = useState(0);\n  const {\n    0: rightBound,\n    1: setRightBound\n  } = useState(0);\n  const {\n    0: bottomBound,\n    1: setBottomBound\n  } = useState(0);\n  const {\n    0: topBound,\n    1: setTopBound\n  } = useState(0);\n  useEffect(() => {\n    const rect = parentRef.current.getBoundingClientRect();\n    setLeftBound(rect.left);\n    setRightBound(rect.right);\n    setBottomBound(rect.bottom);\n    setTopBound(rect.top);\n  }, []); //  const [finalImages, setFinalImages] = useState<ImageInterface[]>([]); // for when we need to store image data in the end\n\n  const {\n    0: images,\n    1: setImages\n  } = useState([{\n    uuid: -1,\n    url: \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 300,\n    height: 300\n  }, {\n    uuid: -1,\n    url: \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 640,\n    height: 425\n  }]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"relative\",\n        border: \"1px solid black\",\n        width: \"90vw\",\n        height: \"90vh\",\n        margin: \"auto\"\n      },\n      ref: parentRef,\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Image, _objectSpread(_objectSpread({}, image), {}, {\n        topBound: topBound,\n        bottomBound: bottomBound,\n        rightBound: rightBound,\n        leftBound: leftBound\n      }), image.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Collage;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx"],"names":["Box","useRouter","React","useState","useRef","useEffect","FileUpload","Image","Collage","router","uuid","query","parentRef","leftBound","setLeftBound","rightBound","setRightBound","bottomBound","setBottomBound","topBound","setTopBound","rect","current","getBoundingClientRect","left","right","bottom","top","images","setImages","url","xPos","yPos","rot","width","height","display","border","margin","map","image"],"mappings":"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","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\n//import { ImageInterface } from \"../interfaces/ImageInterface\";\nimport { ImageInterface } from \"../interfaces\";\n\nconst Collage = () => {\n  const router = useRouter();\n  const { uuid } = router.query;\n\n  const parentRef = useRef<HTMLDivElement>();\n\n  const [leftBound, setLeftBound] = useState<number>(0);\n  const [rightBound, setRightBound] = useState<number>(0);\n  const [bottomBound, setBottomBound] = useState<number>(0);\n  const [topBound, setTopBound] = useState<number>(0);\n\n  useEffect(() => {\n    const rect = parentRef.current.getBoundingClientRect();\n    setLeftBound(rect.left);\n    setRightBound(rect.right);\n    setBottomBound(rect.bottom);\n    setTopBound(rect.top);\n  }, []);\n\n  //  const [finalImages, setFinalImages] = useState<ImageInterface[]>([]); // for when we need to store image data in the end\n  const [images, setImages] = useState<ImageInterface[]>([\n    {\n      uuid: -1,\n      url:\n        \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n      xPos: 1,\n      yPos: 1,\n      rot: 1,\n      width: 300,\n      height: 300,\n    } as ImageInterface,\n    {\n      uuid: -1,\n      url:\n        \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n      xPos: 1,\n      yPos: 1,\n      rot: 1,\n      width: 640,\n      height: 425,\n    } as ImageInterface,\n  ]);\n\n  return (\n    <Box>\n      <FileUpload />\n      <br />\n\n      <div\n        style={{\n          display: \"relative\",\n          border: \"1px solid black\",\n          width: \"90vw\",\n          height: \"90vh\",\n          margin: \"auto\",\n        }}\n        ref={parentRef}\n      >\n        {images.map((image) => (\n          <Image\n            key={image.uuid}\n            {...image}\n            topBound={topBound}\n            bottomBound={bottomBound}\n            rightBound={rightBound}\n            leftBound={leftBound}\n          />\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default Collage;\n"]},"metadata":{},"sourceType":"module"}