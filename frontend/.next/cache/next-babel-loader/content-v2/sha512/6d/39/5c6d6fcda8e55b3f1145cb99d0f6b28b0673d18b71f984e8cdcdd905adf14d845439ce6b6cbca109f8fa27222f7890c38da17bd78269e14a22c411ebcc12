{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\n\nconst Collage = () => {\n  const {\n    0: finalImages,\n    1: setFinalImages\n  } = useState([]); // for when we need to store image data in the end\n\n  const {\n    0: images,\n    1: setImages\n  } = useState([{\n    uuid: 1,\n    url: \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 300,\n    height: 300\n  }, {\n    uuid: 2,\n    url: \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 640,\n    height: 425\n  }]);\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query; //            <Box width={5 / 6} height={5 / 6} border={2} color=\"red\" mx=\"auto\">\n  //            </Box>\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"relative\"\n      },\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Image, _objectSpread({}, image), image.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Collage;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx"],"names":["Box","useRouter","useState","FileUpload","Image","Collage","finalImages","setFinalImages","images","setImages","uuid","url","xPos","yPos","rot","width","height","router","query","display","map","image"],"mappings":";;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,mBAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,MAAMC,OAAO,GAAG,MAChB;AACI,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAmB,EAAnB,CAA9C,CADJ,CAC0E;;AACtE,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAmB,CACnD;AACIQ,IAAAA,IAAI,EAAE,CADV;AAEIC,IAAAA,GAAG,EACC,gFAHR;AAIIC,IAAAA,IAAI,EAAE,CAJV;AAKIC,IAAAA,IAAI,EAAE,CALV;AAMIC,IAAAA,GAAG,EAAE,CANT;AAOIC,IAAAA,KAAK,EAAE,GAPX;AAQIC,IAAAA,MAAM,EAAE;AARZ,GADmD,EAWnD;AACIN,IAAAA,IAAI,EAAE,CADV;AAEIC,IAAAA,GAAG,EACC,gGAHR;AAIIC,IAAAA,IAAI,EAAE,CAJV;AAKIC,IAAAA,IAAI,EAAE,CALV;AAMIC,IAAAA,GAAG,EAAE,CANT;AAOIC,IAAAA,KAAK,EAAE,GAPX;AAQIC,IAAAA,MAAM,EAAE;AARZ,GAXmD,CAAnB,CAApC;AAuBA,QAAMC,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAM;AAACS,IAAAA;AAAD,MAASO,MAAM,CAACC,KAAtB,CA1BJ,CA4BI;AACA;;AACA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,gBACKX,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACR,QAAC,KAAD,oBAA4BA,KAA5B,GAAYA,KAAK,CAACX,IAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA3CD;;AA6CA,eAAeL,OAAf","sourcesContent":["import {Box} from \"@material-ui/core\";\nimport {useRouter} from \"next/router\";\nimport {useState} from \"react\";\n\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\nimport {ImageInterface} from \"../interfaces/ImageInterface\";\n\nconst Collage = () =>\n{\n    const [finalImages, setFinalImages] = useState<ImageInterface[]>([]); // for when we need to store image data in the end\n    const [images, setImages] = useState<ImageInterface[]>([\n        {\n            uuid: 1,\n            url:\n                \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n            xPos: 1,\n            yPos: 1,\n            rot: 1,\n            width: 300,\n            height: 300,\n        } as ImageInterface,\n        {\n            uuid: 2,\n            url:\n                \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n            xPos: 1,\n            yPos: 1,\n            rot: 1,\n            width: 640,\n            height: 425,\n        } as ImageInterface,\n    ]);\n\n    const router = useRouter();\n    const {uuid} = router.query;\n\n    //            <Box width={5 / 6} height={5 / 6} border={2} color=\"red\" mx=\"auto\">\n    //            </Box>\n    return (\n        <Box>\n            <FileUpload />\n            <br />\n\n            <div style={{display: \"relative\"}}>\n                {images.map((image) => (\n                    <Image key={image.uuid} {...image} />\n                ))}\n            </div>\n        </Box>\n    );\n};\n\nexport default Collage;\n"]},"metadata":{},"sourceType":"module"}