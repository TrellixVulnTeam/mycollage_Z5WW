{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/SignUp.tsx\";\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useState, useContext } from \"react\";\nimport FormInput from \"../util/components/FormInput\";\nimport { SignUpContext } from \"../index\";\nimport { sleep } from \"../util/methods\";\n\nconst SignUp = () => {\n  // final values\n  const {\n    0: shouldChange,\n    1: setShouldChange\n  } = useState(false);\n  const account = useContext(SignUpContext);\n  let errors = [];\n  const inputs = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  const helperTexts = [\"\", \"\", \"Get creative!\", \"Your email won't be shared.\", \"Passwords are hashed.\"];\n  const inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    initiateChange();\n    createAccount(account);\n  };\n\n  const createAccount = async account => {\n    await sleep(5);\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(account)\n    }).then(res => res.json()).then(data => console.log(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputs.map((input, i) => /*#__PURE__*/_jsxDEV(FormInput, {\n        id: `${input}-input`,\n        signUpShouldChange: shouldChange,\n        logInShouldChange: false,\n        inputLabel: input,\n        helperText: helperTexts[i],\n        isRequired: true,\n        inputType: inputTypes[i]\n      }, input, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errors.map(error => /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/SignUp.tsx"],"names":["Box","Button","Typography","Alert","useState","useContext","FormInput","SignUpContext","sleep","SignUp","shouldChange","setShouldChange","account","errors","inputs","helperTexts","inputTypes","initiateChange","handleSubmit","e","preventDefault","createAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","map","input","i","error"],"mappings":"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","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useState, useContext } from \"react\";\n\nimport FormInput from \"../util/components/FormInput\";\nimport AccountInterface from \"../interfaces/AccountInterface\";\nimport { SignUpContext } from \"../index\";\nimport { sleep } from \"../util/methods\";\n\nconst SignUp = () => {\n  // final values\n  const [shouldChange, setShouldChange] = useState(false);\n  const account = useContext(SignUpContext);\n  let errors: string[] = [];\n\n  const inputs: string[] = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const helperTexts: string[] = [\n    \"\",\n    \"\",\n    \"Get creative!\",\n    \"Your email won't be shared.\",\n    \"Passwords are hashed.\",\n  ];\n  const inputTypes: string[] = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    initiateChange();\n    createAccount(account);\n  };\n\n  const createAccount = async (account: AccountInterface) => {\n    await sleep(5);\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data));\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input: string, i: number) => (\n          <FormInput\n            key={input}\n            id={`${input}-input`}\n            signUpShouldChange={shouldChange}\n            logInShouldChange={false}\n            inputLabel={input}\n            helperText={helperTexts[i]}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n    </Box>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}