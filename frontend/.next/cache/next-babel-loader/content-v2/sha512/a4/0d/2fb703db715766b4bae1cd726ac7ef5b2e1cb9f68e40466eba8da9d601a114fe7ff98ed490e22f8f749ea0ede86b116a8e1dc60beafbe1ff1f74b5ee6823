{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx\";\nimport { useRef } from \"react\";\n\nconst Image = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height\n}) => {\n  const draggableRef = useRef(undefined);\n  const values = {\n    curXPos: xPos,\n    curYPos: yPos,\n    curRot: rot,\n    curWidth: width,\n    curHeight: height\n  };\n  const valueRef = useRef(values);\n\n  const getData = draggableRef => {\n    if (draggableRef.current !== undefined) {\n      console.log(draggableRef.current.getBoundingClientRect());\n      console.log(screen.width, screen.height);\n      const xPct = 100 * draggableRef.current.getBoundingClientRect().left / screen.width;\n      const yPct = 100 * draggableRef.current.getBoundingClientRect().top / screen.height;\n      const height = draggableRef.current.getBoundingClientRect().height;\n      const width = draggableRef.current.getBoundingClientRect().width;\n      console.log(xPct, yPct);\n    }\n  };\n  /*\n  const [isResizing, setIsResizing] = useState<boolean>(false);\n  let prevX: number, prevY: number;\n   const swOnMouseDown = (e) => {\n    setIsResizing(true);\n    prevX = e.clientX;\n    prevY = e.clientY;\n     window.addEventListener(\"mousemove\", swOnMouseMove);\n    window.addEventListener(\"mouseup\", swOnMouseUp);\n  };\n   const swOnMouseMove = (e) => {\n    if (draggableRef !== null) {\n      const rect = draggableRef.current.getBoundingClientRect();\n      draggableRef.current.style.width = rect.width - (prevX - e.clientX) + \"px\";\n      draggableRef.current.style.height = rect.height - (prevY - e.clientY) + \"px\";\n      draggableRef.current.style.left = rect.left + (prevX - e.clientX) + \"px\";\n       valueRef.current.curWidth = rect.width - (prevX - e.clientX);\n      valueRef.current.curHeight = rect.height - (prevY - e.clientY);\n       prevX = e.clientX;\n      prevY = e.clientY;\n       valueRef.current.curXPos = prevX;\n      valueRef.current.curYPos = prevY;\n    }\n  };\n   const swOnMouseUp = (e) => {\n    window.removeEventListener(\"mousemove\", swOnMouseMove);\n    window.removeEventListener(\"mouseup\", swOnMouseUp);\n    setIsResizing(false);\n  };\n     */\n\n\n  const dragOnMouseDown = e => {\n    window.addEventListener(\"mousemove\", dragMouseMove);\n    window.addEventListener(\"mouseup\", dragMouseUp); //    let prevX = e.clientX;\n    //    let prevY = e.clientY;\n\n    function dragMouseMove(e) {\n      //      let newX = prevX - e.clientX;\n      //      let newY = prevY - e.clientY;\n      const rect = draggableRef.current.getBoundingClientRect();\n      console.log(rect); //      console.log(newX, newY);\n      //      draggableRef.current.style.left = rect.left - newX + \"px\";\n      //      draggableRef.current.style.top = rect.top - newY + \"px\";\n      //\n      //      prevX = e.clientX;\n      //      prevY = e.clientY;\n    }\n\n    function dragMouseUp(e) {\n      window.removeEventListener(\"mousemove\", dragMouseMove);\n      window.removeEventListener(\"mouseup\", dragMouseUp);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: draggableRef,\n    className: \"outerDivStyle\",\n    onMouseDown: dragOnMouseDown,\n    style: {\n      maxWidth: valueRef.current.curWidth,\n      maxHeight: valueRef.current.curHeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerDivStyle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      className: \"imageStyle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resizer ne\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resizer sw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resizer se\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resizer nw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Image;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/components/Image.tsx"],"names":["useRef","Image","uuid","url","xPos","yPos","rot","width","height","draggableRef","undefined","values","curXPos","curYPos","curRot","curWidth","curHeight","valueRef","getData","current","console","log","getBoundingClientRect","screen","xPct","left","yPct","top","dragOnMouseDown","e","window","addEventListener","dragMouseMove","dragMouseUp","rect","removeEventListener","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport { MutableRefObject, Fragment } from \"react\";\nimport classnames from \"classnames\";\n\nimport { ImageInterface } from \"../interfaces/ImageInterface\";\n\nimport { sleep } from \"../util/logic\";\n\nconst Image: React.FC<ImageInterface> = ({\n  uuid,\n  url,\n  xPos,\n  yPos,\n  rot,\n  width,\n  height,\n}) => {\n  const draggableRef = useRef<HTMLDivElement>(undefined);\n\n  const values = {\n    curXPos: xPos,\n    curYPos: yPos,\n    curRot: rot,\n    curWidth: width,\n    curHeight: height,\n  };\n\n  const valueRef = useRef(values);\n\n  const getData = (draggableRef: MutableRefObject<undefined>) => {\n    if (draggableRef.current !== undefined) {\n      console.log(draggableRef.current.getBoundingClientRect());\n      console.log(screen.width, screen.height);\n      const xPct =\n        (100 * draggableRef.current.getBoundingClientRect().left) /\n        screen.width;\n      const yPct =\n        (100 * draggableRef.current.getBoundingClientRect().top) /\n        screen.height;\n      const height = draggableRef.current.getBoundingClientRect().height;\n      const width = draggableRef.current.getBoundingClientRect().width;\n      console.log(xPct, yPct);\n    }\n  };\n\n  /*\n  const [isResizing, setIsResizing] = useState<boolean>(false);\n  let prevX: number, prevY: number;\n\n  const swOnMouseDown = (e) => {\n    setIsResizing(true);\n    prevX = e.clientX;\n    prevY = e.clientY;\n\n    window.addEventListener(\"mousemove\", swOnMouseMove);\n    window.addEventListener(\"mouseup\", swOnMouseUp);\n  };\n\n  const swOnMouseMove = (e) => {\n    if (draggableRef !== null) {\n      const rect = draggableRef.current.getBoundingClientRect();\n      draggableRef.current.style.width = rect.width - (prevX - e.clientX) + \"px\";\n      draggableRef.current.style.height = rect.height - (prevY - e.clientY) + \"px\";\n      draggableRef.current.style.left = rect.left + (prevX - e.clientX) + \"px\";\n\n      valueRef.current.curWidth = rect.width - (prevX - e.clientX);\n      valueRef.current.curHeight = rect.height - (prevY - e.clientY);\n\n      prevX = e.clientX;\n      prevY = e.clientY;\n\n      valueRef.current.curXPos = prevX;\n      valueRef.current.curYPos = prevY;\n    }\n  };\n\n  const swOnMouseUp = (e) => {\n    window.removeEventListener(\"mousemove\", swOnMouseMove);\n    window.removeEventListener(\"mouseup\", swOnMouseUp);\n    setIsResizing(false);\n  };\n     */\n\n  const dragOnMouseDown = (e) => {\n    window.addEventListener(\"mousemove\", dragMouseMove);\n    window.addEventListener(\"mouseup\", dragMouseUp);\n\n    //    let prevX = e.clientX;\n    //    let prevY = e.clientY;\n\n    function dragMouseMove(e) {\n      //      let newX = prevX - e.clientX;\n      //      let newY = prevY - e.clientY;\n\n      const rect = draggableRef.current.getBoundingClientRect();\n      console.log(rect);\n\n      //      console.log(newX, newY);\n\n      //      draggableRef.current.style.left = rect.left - newX + \"px\";\n      //      draggableRef.current.style.top = rect.top - newY + \"px\";\n      //\n      //      prevX = e.clientX;\n      //      prevY = e.clientY;\n    }\n\n    function dragMouseUp(e) {\n      window.removeEventListener(\"mousemove\", dragMouseMove);\n      window.removeEventListener(\"mouseup\", dragMouseUp);\n    }\n  };\n\n  return (\n    <div\n      ref={draggableRef}\n      className=\"outerDivStyle\"\n      onMouseDown={dragOnMouseDown}\n      style={{\n        maxWidth: valueRef.current.curWidth,\n        maxHeight: valueRef.current.curHeight,\n      }}\n    >\n      <div className=\"innerDivStyle\"></div>\n      <img src={url} className=\"imageStyle\" />\n      <div className=\"resizer ne\"></div>\n      <div className=\"resizer sw\"></div>\n      <div className=\"resizer se\"></div>\n      <div className=\"resizer nw\"></div>\n    </div>\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}