{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport FormInput from \"./util/FormInput\";\n\n// interface TestInterface {\n//   firstName: string;\n//   lastName: string;\n// }\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  // final values\n  var _useState = useState(false),\n      shouldChange = _useState[0],\n      setShouldChange = _useState[1];\n\n  var _useState2 = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var changeAccount = function changeAccount(newAccount) {\n    setAccount(newAccount);\n  };\n\n  var inputs = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  var helperTexts = [\"\", \"\", \"Get creative!\", \"Your email won't be shared.\", \"Passwords are hashed.\"];\n  var inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); // setShouldReturn(true);\n\n    console.log(\"submitted\");\n  }; //   const [obj, setObj] = useState({\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //   } as TestInterface);\n  //   const handleArr = (newObj: TestInterface) => {\n  //     setObj(newObj);\n  //   };\n\n\n  var obj = {\n    firstName: \"Sahil\",\n    lastName: \"Kamboj\"\n  };\n\n  var obj2 = _objectSpread(_objectSpread({}, obj), {}, {\n    firstName: \"Sarthak\"\n  });\n\n  console.log(obj);\n  console.log(obj2);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputs.map(function (input, i) {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          changeAccount: changeAccount,\n          shouldChange: shouldChange,\n          id: \"\".concat(input, \"-input\"),\n          inputLabel: input,\n          helperText: helperTexts[i],\n          isRequired: true,\n          inputType: inputTypes[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"9xrM4RMFswYsvWCFYkCXBzSFasw=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Box","Button","Typography","useState","FormInput","HomePage","shouldChange","setShouldChange","firstName","lastName","username","email","password","account","setAccount","changeAccount","newAccount","inputs","helperTexts","inputTypes","handleSubmit","e","preventDefault","console","log","obj","obj2","map","input","i"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;;AAGA;AACA;AACA;AACA;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAClB;AADkB,kBAEsBF,QAAQ,CAAC,KAAD,CAF9B;AAAA,MAEXG,YAFW;AAAA,MAEGC,eAFH;;AAAA,mBAGYJ,QAAQ,CAAC;AACrCK,IAAAA,SAAS,EAAE,EAD0B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,KAAK,EAAE,EAJ8B;AAKrCC,IAAAA,QAAQ,EAAE;AAL2B,GAAD,CAHpB;AAAA,MAGXC,OAHW;AAAA,MAGFC,UAHE;;AAUlB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAkC;AACtDF,IAAAA,UAAU,CAACE,UAAD,CAAV;AACD,GAFD;;AAIA,MAAMC,MAAgB,GAAG,CACvB,YADuB,EAEvB,WAFuB,EAGvB,UAHuB,EAIvB,OAJuB,EAKvB,UALuB,CAAzB;AAOA,MAAMC,WAAqB,GAAG,CAC5B,EAD4B,EAE5B,EAF4B,EAG5B,eAH4B,EAI5B,6BAJ4B,EAK5B,uBAL4B,CAA9B;AAOA,MAAMC,UAAoB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,UAAlC,CAA7B;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAuC;AAC1DA,IAAAA,CAAC,CAACC,cAAF,GAD0D,CAE1D;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAJD,CA9BkB,CAoClB;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMC,GAAG,GAAG;AACVjB,IAAAA,SAAS,EAAE,OADD;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAAZ;;AAKA,MAAMiB,IAAI,mCACLD,GADK;AAERjB,IAAAA,SAAS,EAAE;AAFH,IAAV;;AAKAe,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAEA,sBACE,QAAC,GAAD;AAAA,4BAYE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEN,YAA9B;AAAA,iBACGH,MAAM,CAACU,GAAP,CAAW,UAACC,KAAD,EAAgBC,CAAhB;AAAA,4BACV,QAAC,SAAD;AAEE,UAAA,aAAa,EAAEd,aAFjB;AAGE,UAAA,YAAY,EAAET,YAHhB;AAIE,UAAA,EAAE,YAAKsB,KAAL,WAJJ;AAKE,UAAA,UAAU,EAAEA,KALd;AAME,UAAA,UAAU,EAAEV,WAAW,CAACW,CAAD,CANzB;AAOE,UAAA,UAAU,EAAE,IAPd;AAQE,UAAA,SAAS,EAAEV,UAAU,CAACU,CAAD;AARvB,WACOA,CADP;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CADH,eAaE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA3FQxB,Q;;KAAAA,Q;AA6FT,eAAeA,QAAf","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport FormInput from \"./util/FormInput\";\nimport AccountInterface from \"./interfaces/AccountInterface\";\n\n// interface TestInterface {\n//   firstName: string;\n//   lastName: string;\n// }\n\nfunction HomePage() {\n  // final values\n  const [shouldChange, setShouldChange] = useState(false);\n  const [account, setAccount] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  } as AccountInterface);\n  const changeAccount = (newAccount: AccountInterface) => {\n    setAccount(newAccount);\n  };\n\n  const inputs: string[] = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const helperTexts: string[] = [\n    \"\",\n    \"\",\n    \"Get creative!\",\n    \"Your email won't be shared.\",\n    \"Passwords are hashed.\",\n  ];\n  const inputTypes: string[] = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    // setShouldReturn(true);\n    console.log(\"submitted\");\n  };\n\n  //   const [obj, setObj] = useState({\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //   } as TestInterface);\n\n  //   const handleArr = (newObj: TestInterface) => {\n  //     setObj(newObj);\n  //   };\n\n  const obj = {\n    firstName: \"Sahil\",\n    lastName: \"Kamboj\",\n  };\n\n  const obj2 = {\n    ...obj,\n    firstName: \"Sarthak\",\n  };\n\n  console.log(obj);\n  console.log(obj2);\n\n  return (\n    <Box>\n      {/* {console.log(obj)} */}\n      {/* <Button\n        onClick={() =>\n          handleArr({\n            firstName: \"Sahil\",\n            lastName: \"Kamboj\",\n          } as TestInterface)\n        }\n      >\n        Change 2\n      </Button> */}\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input: string, i: number) => (\n          <FormInput\n            key={i}\n            changeAccount={changeAccount}\n            shouldChange={shouldChange}\n            id={`${input}-input`}\n            inputLabel={input}\n            helperText={helperTexts[i]}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}