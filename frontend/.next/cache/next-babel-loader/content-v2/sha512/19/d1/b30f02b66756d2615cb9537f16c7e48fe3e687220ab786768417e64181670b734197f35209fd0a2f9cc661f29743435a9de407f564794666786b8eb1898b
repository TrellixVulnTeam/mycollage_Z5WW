{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography } from \"@material-ui/core\";\nimport React, { useState, createContext } from \"react\";\nimport FormInput from \"./util/FormInput\";\nexport var LogInContext = /*#__PURE__*/createContext(undefined);\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  var inputs = [\"Email\", \"Password\"];\n  var inputTypes = [\"email\", \"password\"];\n  var account = {\n    email: \"\",\n    password: \"\"\n  };\n\n  var _useState = useState(false),\n      shouldChange = _useState[0],\n      setShouldChange = _useState[1];\n\n  var _useState2 = useState(true),\n      bool = _useState2[0],\n      setBool = _useState2[1];\n\n  var initiateChange = function initiateChange() {\n    setShouldChange(!shouldChange);\n    setBool(!bool);\n    console.log(\"initiateChange() account: \", account);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  var loginAccount = function loginAccount(account) {\n    console.log(\"loginAccount() account: \", account);\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(account)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LogInContext.Provider, {\n    value: account,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: handleSubmit,\n        children: [inputs.map(function (input, i) {\n          return /*#__PURE__*/_jsxDEV(FormInput, {\n            id: \"\".concat(input, \"-input\"),\n            logInShouldChange: shouldChange,\n            inputLabel: input,\n            isRequired: true,\n            inputType: inputTypes[i]\n          }, input, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"JfhypquZWvskjm4QogmrAcIH3M4=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/index.tsx"],"names":["Box","Typography","React","useState","createContext","FormInput","LogInContext","undefined","HomePage","inputs","inputTypes","account","email","password","shouldChange","setShouldChange","bool","setBool","initiateChange","console","log","handleSubmit","e","preventDefault","loginAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","map","input","i"],"mappings":"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","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\nimport React, { useState, createContext } from \"react\";\nimport AccountInterface from \"./interfaces/AccountInterface\";\n\nimport FormInput from \"./util/FormInput\";\n\nexport const LogInContext = createContext<AccountInterface>(undefined);\n\nfunction HomePage() {\n  const inputs = [\"Email\", \"Password\"];\n  const inputTypes = [\"email\", \"password\"];\n\n  const account: AccountInterface = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const [shouldChange, setShouldChange] = useState<boolean>(false);\n  const [bool, setBool] = useState<boolean>(true);\n  const initiateChange = () => {\n    setShouldChange(!shouldChange);\n    setBool(!bool);\n    console.log(\"initiateChange() account: \", account);\n  };\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    initiateChange();\n    loginAccount(account);\n  };\n\n  const loginAccount = (account: AccountInterface) => {\n    console.log(\"loginAccount() account: \", account);\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data));\n  };\n\n  return (\n    <LogInContext.Provider value={account}>\n      <Box>\n        <Typography variant=\"h2\">Log In</Typography>\n        <form method=\"POST\" onSubmit={handleSubmit}>\n          {inputs.map((input, i) => (\n            <FormInput\n              key={input}\n              id={`${input}-input`}\n              logInShouldChange={shouldChange}\n              inputLabel={input}\n              isRequired={true}\n              inputType={inputTypes[i]}\n            />\n          ))}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Log In\n          </Button>\n        </form>\n      </Box>\n    </LogInContext.Provider>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}