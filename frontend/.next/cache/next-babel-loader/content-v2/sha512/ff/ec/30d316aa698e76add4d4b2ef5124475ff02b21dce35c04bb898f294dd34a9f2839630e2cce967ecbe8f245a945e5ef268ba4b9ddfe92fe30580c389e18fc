{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/FileUpload.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useState } from \"react\";\n\nvar FileUpload = function FileUpload() {\n  _s();\n\n  var errorText = \"File type not valid\";\n\n  var _useState = useState(false),\n      isFileError = _useState[0],\n      setIsFileError = _useState[1];\n\n  var _useState2 = useState(null),\n      uploadedFile = _useState2[0],\n      setUploadedFile = _useState2[1];\n\n  var imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  var handleImageChange = function handleImageChange(e) {\n    var fileName = e.target.files[0].name;\n    var periodIdx = fileName.lastIndexOf(\".\");\n\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n      setUploadedFile(null);\n      return;\n    }\n\n    setIsFileError(false);\n    setUploadedFile(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), isFileError && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorText\n    }, errorText, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this), !isFileError && uploadedFile !== null && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FileUpload, \"TxliFl2Ox7t9T4uA5ICT3IUGhvU=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/FileUpload.tsx"],"names":["Box","Button","Alert","useState","FileUpload","errorText","isFileError","setIsFileError","uploadedFile","setUploadedFile","imageTypes","handleImageChange","e","fileName","target","files","name","periodIdx","lastIndexOf","includes","slice"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAIC,SAAS,GAAG,qBAAhB;;AADuB,kBAEeF,QAAQ,CAAU,KAAV,CAFvB;AAAA,MAEhBG,WAFgB;AAAA,MAEHC,cAFG;;AAAA,mBAGiBJ,QAAQ,CAAC,IAAD,CAHzB;AAAA,MAGhBK,YAHgB;AAAA,MAGFC,eAHE;;AAKvB,MAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAnB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/B,QAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnC;AACA,QAAMC,SAAS,GAAGJ,QAAQ,CAACK,WAAT,CAAqB,GAArB,CAAlB;;AACA,QAAI,CAACR,UAAU,CAACS,QAAX,CAAoBN,QAAQ,CAACO,KAAT,CAAeH,SAAS,GAAG,CAA3B,CAApB,CAAL,EAAyD;AACvDV,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA;AACD;;AACDF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,eAAe,CAACG,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AACD,GAVD;;AAWA,sBACE,QAAC,GAAD;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,SAAS,EAAC,OAAtC;AAAA,6BACE;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAEJ;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,EAKGL,WAAW,iBACV,QAAC,KAAD;AAAuB,MAAA,QAAQ,EAAC,OAAhC;AAAA,gBACGD;AADH,OAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,aANJ,EAUG,CAACC,WAAD,IAAgBE,YAAY,KAAK,IAAjC,iBACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXJ,eAeE;AAAA;AAAA;AAAA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CArCD;;GAAMJ,U;;KAAAA,U;AAuCN,eAAeA,UAAf","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useState } from \"react\";\n\nconst FileUpload = () => {\n  let errorText = \"File type not valid\";\n  const [isFileError, setIsFileError] = useState<boolean>(false);\n  const [uploadedFile, setUploadedFile] = useState(null);\n\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = (e) => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n      setUploadedFile(null);\n      return;\n    }\n    setIsFileError(false);\n    setUploadedFile(e.target.files[0]);\n  };\n  return (\n    <Box>\n      {/* Possible turn file upload logic into another component */}\n      <Button variant=\"contained\" component=\"label\">\n        <input id=\"file-upload\" type=\"file\" onChange={handleImageChange} />\n      </Button>\n      {isFileError && (\n        <Alert key={errorText} severity=\"error\">\n          {errorText}\n        </Alert>\n      )}\n      {!isFileError && uploadedFile !== null && (\n        <Button variant=\"contained\" color=\"primary\">\n          Upload\n        </Button>\n      )}\n      <br />\n    </Box>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}