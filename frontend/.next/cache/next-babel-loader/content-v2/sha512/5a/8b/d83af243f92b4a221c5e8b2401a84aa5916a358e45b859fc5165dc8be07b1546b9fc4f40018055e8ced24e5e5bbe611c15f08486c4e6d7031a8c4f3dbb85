{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport Image from \"../components/Image\";\n\nconst Collage = () => {\n  const {\n    0: isFileError,\n    1: setIsFileError\n  } = useState(false);\n  const {\n    0: uploadedFile,\n    1: setUploadedFile\n  } = useState(null);\n  const {\n    0: images,\n    1: setImages\n  } = useState([{\n    uuid: 1,\n    url: \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 1,\n    height: 1\n  }]);\n  const errorText = \"File type not valid\";\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query;\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = e => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n      setUploadedFile(null);\n      return;\n    }\n\n    setIsFileError(false);\n    setUploadedFile(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isFileError && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorText\n    }, errorText, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), !isFileError && uploadedFile !== null && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Image, _objectSpread({}, image), image.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Collage;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx"],"names":["Box","Button","Alert","useRouter","useState","Image","Collage","isFileError","setIsFileError","uploadedFile","setUploadedFile","images","setImages","uuid","url","xPos","yPos","rot","width","height","errorText","router","query","imageTypes","handleImageChange","e","fileName","target","files","name","periodIdx","lastIndexOf","includes","slice","map","image"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCJ,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAmB,CACrD;AACES,IAAAA,IAAI,EAAE,CADR;AAEEC,IAAAA,GAAG,EACD,gFAHJ;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE,CALR;AAMEC,IAAAA,GAAG,EAAE,CANP;AAOEC,IAAAA,KAAK,EAAE,CAPT;AAQEC,IAAAA,MAAM,EAAE;AARV,GADqD,CAAnB,CAApC;AAaA,QAAMC,SAAS,GAAG,qBAAlB;AAEA,QAAMC,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWQ,MAAM,CAACC,KAAxB;AACA,QAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAnB;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnC;AACA,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,WAAT,CAAqB,GAArB,CAAlB;;AACA,QAAI,CAACR,UAAU,CAACS,QAAX,CAAoBN,QAAQ,CAACO,KAAT,CAAeH,SAAS,GAAG,CAA3B,CAApB,CAAL,EAAyD;AACvDtB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA;AACD;;AACDF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,eAAe,CAACe,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AACD,GAVD;;AAYA,sBACE,QAAC,GAAD;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,SAAS,EAAC,OAAtC;AAAA,6BACE;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAEJ;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGjB,WAAW,iBACV,QAAC,KAAD;AAAuB,MAAA,QAAQ,EAAC,OAAhC;AAAA,gBACGa;AADH,OAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA,YANJ,EAUG,CAACb,WAAD,IAAgBE,YAAY,KAAK,IAAjC,iBACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAeE;AAAA;AAAA;AAAA;AAAA,YAfF,eAiBE,QAAC,GAAD;AAAA,gBACGE,MAAM,CAACuB,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD,oBAA4BA,KAA5B,GAAYA,KAAK,CAACtB,IAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3DD;;AA6DA,eAAeP,OAAf","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\n\nimport Image from \"../components/Image\";\nimport { ImageInterface } from \"../interfaces/ImageInterface\";\n\nconst Collage = () => {\n  const [isFileError, setIsFileError] = useState<boolean>(false);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [images, setImages] = useState<ImageInterface[]>([\n    {\n      uuid: 1,\n      url:\n        \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n      xPos: 1,\n      yPos: 1,\n      rot: 1,\n      width: 1,\n      height: 1,\n    } as ImageInterface,\n  ]);\n\n  const errorText = \"File type not valid\";\n\n  const router = useRouter();\n  const { uuid } = router.query;\n  const imageTypes = [\"png\", \"jpg\", \"jpeg\"];\n\n  const handleImageChange = (e) => {\n    const fileName = e.target.files[0].name;\n    const periodIdx = fileName.lastIndexOf(\".\");\n    if (!imageTypes.includes(fileName.slice(periodIdx + 1))) {\n      setIsFileError(true);\n      setUploadedFile(null);\n      return;\n    }\n    setIsFileError(false);\n    setUploadedFile(e.target.files[0]);\n  };\n\n  return (\n    <Box>\n      {/* Possible turn file upload logic into another component */}\n      <Button variant=\"contained\" component=\"label\">\n        <input id=\"file-upload\" type=\"file\" onChange={handleImageChange} />\n      </Button>\n      {isFileError && (\n        <Alert key={errorText} severity=\"error\">\n          {errorText}\n        </Alert>\n      )}\n      {!isFileError && uploadedFile !== null && (\n        <Button variant=\"contained\" color=\"primary\">\n          Upload\n        </Button>\n      )}\n      <br />\n\n      <Box>\n        {images.map((image) => (\n          <Image key={image.uuid} {...image} />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Collage;\n"]},"metadata":{},"sourceType":"module"}