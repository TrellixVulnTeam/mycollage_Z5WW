{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useState, useRef } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\n\nconst Collage = () => {\n  const parentRef = useRef();\n\n  if (parentRef !== undefined) {\n    console.log(parentRef.current.getBoundingClientRect());\n  }\n\n  const {\n    0: finalImages,\n    1: setFinalImages\n  } = useState([]); // for when we need to store image data in the end\n\n  const {\n    0: images,\n    1: setImages\n  } = useState([{\n    uuid: 1,\n    url: \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 300,\n    height: 300\n  }, {\n    uuid: 2,\n    url: \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n    xPos: 1,\n    yPos: 1,\n    rot: 1,\n    width: 640,\n    height: 425\n  }]);\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"relative\",\n        width: \"90vw\",\n        height: \"90vh\",\n        border: \"1px solid black\",\n        margin: \"auto\"\n      },\n      ref: parentRef,\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Image, _objectSpread(_objectSpread({}, image), {}, {\n        topBound: 50,\n        bottomBound: 50,\n        rightBound: 50,\n        leftBound: 50\n      }), image.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Collage;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/collage/[uuid].tsx"],"names":["Box","useRouter","useState","useRef","FileUpload","Image","Collage","parentRef","undefined","console","log","current","getBoundingClientRect","finalImages","setFinalImages","images","setImages","uuid","url","xPos","yPos","rot","width","height","router","query","display","border","margin","map","image"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,SAAS,GAAGJ,MAAM,EAAxB;;AACA,MAAII,SAAS,KAAKC,SAAlB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,OAAV,CAAkBC,qBAAlB,EAAZ;AACD;;AAED,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAAmB,EAAnB,CAA9C,CANoB,CAMkD;;AACtE,QAAM;AAAA,OAACa,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAmB,CACrD;AACEe,IAAAA,IAAI,EAAE,CADR;AAEEC,IAAAA,GAAG,EACD,gFAHJ;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE,CALR;AAMEC,IAAAA,GAAG,EAAE,CANP;AAOEC,IAAAA,KAAK,EAAE,GAPT;AAQEC,IAAAA,MAAM,EAAE;AARV,GADqD,EAWrD;AACEN,IAAAA,IAAI,EAAE,CADR;AAEEC,IAAAA,GAAG,EACD,gGAHJ;AAIEC,IAAAA,IAAI,EAAE,CAJR;AAKEC,IAAAA,IAAI,EAAE,CALR;AAMEC,IAAAA,GAAG,EAAE,CANP;AAOEC,IAAAA,KAAK,EAAE,GAPT;AAQEC,IAAAA,MAAM,EAAE;AARV,GAXqD,CAAnB,CAApC;AAuBA,QAAMC,MAAM,GAAGvB,SAAS,EAAxB;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAWO,MAAM,CAACC,KAAxB;AAEA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,UADJ;AAELJ,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILI,QAAAA,MAAM,EAAE,iBAJH;AAKLC,QAAAA,MAAM,EAAE;AALH,OADT;AAQE,MAAA,GAAG,EAAErB,SARP;AAAA,gBAUGQ,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD,kCAEMA,KAFN;AAGE,QAAA,QAAQ,EAAE,EAHZ;AAIE,QAAA,WAAW,EAAE,EAJf;AAKE,QAAA,UAAU,EAAE,EALd;AAME,QAAA,SAAS,EAAE;AANb,UACOA,KAAK,CAACb,IADb;AAAA;AAAA;AAAA;AAAA,cADD;AAVH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA7DD;;AA+DA,eAAeX,OAAf","sourcesContent":["import { Box } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useState, useRef } from \"react\";\n\nimport FileUpload from \"./FileUpload\";\nimport Image from \"../components/Image\";\nimport { ImageInterface } from \"../interfaces/ImageInterface\";\n\nconst Collage = () => {\n  const parentRef = useRef<HTMLDivElement>();\n  if (parentRef !== undefined) {\n    console.log(parentRef.current.getBoundingClientRect());\n  }\n\n  const [finalImages, setFinalImages] = useState<ImageInterface[]>([]); // for when we need to store image data in the end\n  const [images, setImages] = useState<ImageInterface[]>([\n    {\n      uuid: 1,\n      url:\n        \"https://wepushbuttons.com.au/wp-content/uploads/2012/03/twitter-logo-small.jpg\",\n      xPos: 1,\n      yPos: 1,\n      rot: 1,\n      width: 300,\n      height: 300,\n    } as ImageInterface,\n    {\n      uuid: 2,\n      url:\n        \"https://www.splashtop.com/wp-content/uploads/Mac-lab-computer-with-Splashtop-Remote-Access.jpg\",\n      xPos: 1,\n      yPos: 1,\n      rot: 1,\n      width: 640,\n      height: 425,\n    } as ImageInterface,\n  ]);\n\n  const router = useRouter();\n  const { uuid } = router.query;\n\n  return (\n    <Box>\n      <FileUpload />\n      <br />\n\n      <div\n        style={{\n          display: \"relative\",\n          width: \"90vw\",\n          height: \"90vh\",\n          border: \"1px solid black\",\n          margin: \"auto\",\n        }}\n        ref={parentRef}\n      >\n        {images.map((image) => (\n          <Image\n            key={image.uuid}\n            {...image}\n            topBound={50}\n            bottomBound={50}\n            rightBound={50}\n            leftBound={50}\n          />\n        ))}\n      </div>\n    </Box>\n  );\n};\n\nexport default Collage;\n"]},"metadata":{},"sourceType":"module"}