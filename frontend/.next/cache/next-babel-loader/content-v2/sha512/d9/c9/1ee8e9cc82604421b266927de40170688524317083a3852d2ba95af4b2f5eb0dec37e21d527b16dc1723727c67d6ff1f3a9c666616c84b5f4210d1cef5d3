{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\";\nimport Link from \"next/link\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst SignUp = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState([]);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n  const inputLabels = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  const values = [firstName, lastName, username, email, password];\n  const setValues = [setFirstName, setLastName, setUsername, setEmail, setPassword];\n\n  const signUpAccount = () => {\n    setErrors([\"Verifying information...\"]);\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        username,\n        email,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data[\"errors\"]) {\n        let newErrors = [];\n        data[\"errors\"].map(error => newErrors.push(error[\"message\"]));\n        setErrors(newErrors);\n      } else {\n        setErrors([]);\n        setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, {\n          path: \"/\"\n        });\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    signUpAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputTypes.map((inputType, i) => /*#__PURE__*/_jsxDEV(FormInput, {\n        id: `${inputLabels[i].toLowerCase()}-input`,\n        inputLabel: inputLabels[i],\n        inputType: inputType,\n        isRequired: true,\n        value: values[i],\n        setValue: setValues[i]\n      }, inputLabels[i], false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), errors.map(error => /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Link","Box","Typography","Button","Alert","React","useState","useCookies","FormInput","SignUp","userIDCookie","setUserIDCookie","errors","setErrors","username","setUsername","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","inputTypes","inputLabels","values","setValues","signUpAccount","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","newErrors","map","error","push","uuid","path","handleSubmit","e","preventDefault","inputType","i","toLowerCase"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,UAAU,CAAC,CAAC,UAAD,CAAD,CAAlD;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM;AAAA,OAACY,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM;AAAA,OAACc,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM;AAAA,OAACgB,QAAD;AAAA,OAAWC;AAAX,MAA0BjB,QAAQ,CAAS,EAAT,CAAxC;AAEA,QAAMkB,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,UAAlC,CAAnB;AACA,QAAMC,WAAW,GAAG,CAClB,YADkB,EAElB,WAFkB,EAGlB,UAHkB,EAIlB,OAJkB,EAKlB,UALkB,CAApB;AAOA,QAAMC,MAAM,GAAG,CAACV,SAAD,EAAYE,QAAZ,EAAsBJ,QAAtB,EAAgCM,KAAhC,EAAuCE,QAAvC,CAAf;AACA,QAAMK,SAAS,GAAG,CAChBV,YADgB,EAEhBE,WAFgB,EAGhBJ,WAHgB,EAIhBM,QAJgB,EAKhBE,WALgB,CAAlB;;AAQA,QAAMK,aAAa,GAAG,MAAM;AAC1Bf,IAAAA,SAAS,CAAC,CAAC,0BAAD,CAAD,CAAT;AACAgB,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAElB,QAAAA,SAAF;AAAaE,QAAAA,QAAb;AAAuBJ,QAAAA,QAAvB;AAAiCM,QAAAA,KAAjC;AAAwCE,QAAAA;AAAxC,OAAf;AALuC,KAA1C,CAAL,CAOGa,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAAC,QAAD,CAAR,EAAoB;AAClB,YAAIG,SAAmB,GAAG,EAA1B;AACAH,QAAAA,IAAI,CAAC,QAAD,CAAJ,CAAeI,GAAf,CAAoBC,KAAD,IAAWF,SAAS,CAACG,IAAV,CAAeD,KAAK,CAAC,SAAD,CAApB,CAA9B;AACA9B,QAAAA,SAAS,CAAC4B,SAAD,CAAT;AACD,OAJD,MAIO;AACL5B,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,QAAAA,eAAe,CAAC,UAAD,EAAa2B,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoBO,IAAjC,EAAuC;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAvC,CAAf;AACD;AACF,KAlBH;AAmBD,GArBD;;AAuBA,QAAMC,YAAY,GAAIC,CAAD,IAAuC;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACArB,IAAAA,aAAa;AACd,GAHD;;AAKA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEmB,YAA9B;AAAA,iBACGvB,UAAU,CAACkB,GAAX,CAAe,CAACQ,SAAD,EAAYC,CAAZ,kBACd,QAAC,SAAD;AAEE,QAAA,EAAE,EAAG,GAAE1B,WAAW,CAAC0B,CAAD,CAAX,CAAeC,WAAf,EAA6B,QAFtC;AAGE,QAAA,UAAU,EAAE3B,WAAW,CAAC0B,CAAD,CAHzB;AAIE,QAAA,SAAS,EAAED,SAJb;AAKE,QAAA,UAAU,EAAE,IALd;AAME,QAAA,KAAK,EAAExB,MAAM,CAACyB,CAAD,CANf;AAOE,QAAA,QAAQ,EAAExB,SAAS,CAACwB,CAAD;AAPrB,SACO1B,WAAW,CAAC0B,CAAD,CADlB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAeGvC,MAAM,CAAC8B,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AAAmB,QAAA,QAAQ,EAAC,OAA5B;AAAA,kBACGA;AADH,SAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,cADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArFD;;AAuFA,eAAelC,MAAf","sourcesContent":["import Link from \"next/link\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst SignUp = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [firstName, setFirstName] = useState<string>(\"\");\n  const [lastName, setLastName] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n  const inputLabels = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const values = [firstName, lastName, username, email, password];\n  const setValues = [\n    setFirstName,\n    setLastName,\n    setUsername,\n    setEmail,\n    setPassword,\n  ];\n\n  const signUpAccount = () => {\n    setErrors([\"Verifying information...\"]);\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ firstName, lastName, username, email, password }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        if (data[\"errors\"]) {\n          let newErrors: string[] = [];\n          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n          setErrors(newErrors);\n        } else {\n          setErrors([]);\n          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n        }\n      });\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    signUpAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputTypes.map((inputType, i) => (\n          <FormInput\n            key={inputLabels[i]}\n            id={`${inputLabels[i].toLowerCase()}-input`}\n            inputLabel={inputLabels[i]}\n            inputType={inputType}\n            isRequired={true}\n            value={values[i]}\n            setValue={setValues[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n      <Link href=\"/login\">\n        <a>Login</a>\n      </Link>\n    </Box>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}