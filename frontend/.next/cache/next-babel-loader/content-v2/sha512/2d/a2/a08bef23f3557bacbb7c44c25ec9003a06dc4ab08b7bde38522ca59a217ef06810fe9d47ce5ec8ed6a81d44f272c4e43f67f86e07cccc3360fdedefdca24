{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nvar SignUp = function SignUp() {\n  _s();\n\n  // set user-uuid cookie\n  var _useCookies = useCookies([\"userUUID\"]),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      userIDCookie = _useCookies2[0],\n      setUserIDCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      errors = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      firstName = _useState3[0],\n      setFirstName = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n  var values = [firstName, lastName, username, email, password];\n  var setValues = [setFirstName, setLastName, setUsername, setEmail, setPassword];\n\n  var signUpAccount = function signUpAccount() {\n    console.log(firstName, lastName, username, email, password); //    fetch(\"http://localhost:5000/accounts/signUp\", {\n    //      method: \"POST\",\n    //      headers: {\n    //        \"Content-Type\": \"application/json\",\n    //      },\n    //      body: JSON.stringify({ email, password }),\n    //    })\n    //      .then((res) => res.json())\n    //      .then((data) => {\n    //        //        console.log(data);\n    //        if (data[\"errors\"]) {\n    //          let newErrors: string[] = [];\n    //          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n    //          setErrors(newErrors);\n    //        } else {\n    //          setErrors([]);\n    //          console.log(data[\"accounts\"][0].uuid);\n    //          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n    //          console.log(\"user uuid cookie set\");\n    //        }\n    //      });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    signUpAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputTypes.map(function (inputType, i) {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          id: \"\".concat(inputType, \"-input\"),\n          inputLabel: inputType.toUpperCase(),\n          inputType: inputType,\n          isRequired: true,\n          value: values[i],\n          setValue: setValues[i]\n        }, inputType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this), errors.map(function (error) {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SignUp, \"EW4++3TWBT+SQ/jc0sdb4Ikz7uo=\", false, function () {\n  return [useCookies];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Box","Typography","Button","Alert","React","useState","useCookies","FormInput","SignUp","userIDCookie","setUserIDCookie","errors","setErrors","username","setUsername","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","inputTypes","values","setValues","signUpAccount","console","log","handleSubmit","e","preventDefault","map","inputType","i","toUpperCase","error"],"mappings":"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","sourcesContent":["import { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst SignUp = () => {\n  // set user-uuid cookie\n  const [userIDCookie, setUserIDCookie] = useCookies([\"userUUID\"]);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [firstName, setFirstName] = useState<string>(\"\");\n  const [lastName, setLastName] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n  const values = [firstName, lastName, username, email, password];\n  const setValues = [\n    setFirstName,\n    setLastName,\n    setUsername,\n    setEmail,\n    setPassword,\n  ];\n\n  const signUpAccount = () => {\n    console.log(firstName, lastName, username, email, password);\n    //    fetch(\"http://localhost:5000/accounts/signUp\", {\n    //      method: \"POST\",\n    //      headers: {\n    //        \"Content-Type\": \"application/json\",\n    //      },\n    //      body: JSON.stringify({ email, password }),\n    //    })\n    //      .then((res) => res.json())\n    //      .then((data) => {\n    //        //        console.log(data);\n    //        if (data[\"errors\"]) {\n    //          let newErrors: string[] = [];\n    //          data[\"errors\"].map((error) => newErrors.push(error[\"message\"]));\n    //          setErrors(newErrors);\n    //        } else {\n    //          setErrors([]);\n    //          console.log(data[\"accounts\"][0].uuid);\n    //          setUserIDCookie(\"userUUID\", data[\"accounts\"][0].uuid, { path: \"/\" });\n    //          console.log(\"user uuid cookie set\");\n    //        }\n    //      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signUpAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputTypes.map((inputType, i) => (\n          <FormInput\n            key={inputType}\n            id={`${inputType}-input`}\n            inputLabel={inputType.toUpperCase()}\n            inputType={inputType}\n            isRequired={true}\n            value={values[i]}\n            setValue={setValues[i]}\n          />\n        ))}\n\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n    </Box>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}