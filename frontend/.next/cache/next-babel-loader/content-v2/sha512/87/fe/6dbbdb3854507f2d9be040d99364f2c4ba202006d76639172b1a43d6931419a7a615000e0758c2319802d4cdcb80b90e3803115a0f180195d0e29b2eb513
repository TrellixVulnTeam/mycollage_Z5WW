{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport FormInput from \"./util/FormInput\";\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      bool = _useState[0],\n      setBool = _useState[1]; // final values\n\n\n  var _useState2 = useState(false),\n      shouldChange = _useState2[0],\n      setShouldChange = _useState2[1];\n\n  var _useState3 = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      account = _useState3[0],\n      setAccount = _useState3[1];\n\n  var changeAccount = function changeAccount(newAccount) {\n    setAccount(newAccount);\n  };\n\n  var inputs = [\"First name\", \"Last name\", \"Username\", \"Email\", \"Password\"];\n  var helperTexts = [\"\", \"\", \"Get creative!\", \"Your email won't be shared.\", \"Passwords are hashed.\"];\n  var inputTypes = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  var instillChanges = function instillChanges() {\n    setShouldChange(true);\n    setBool(!bool);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    instillChanges();\n    createAccount(account); // setShouldChange(false);\n  };\n\n  var createAccount = function createAccount(account) {\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      body: JSON.stringify(account)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputs.map(function (input, i) {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          id: \"\".concat(input, \"-input\"),\n          origAccount: account,\n          changeAccount: changeAccount,\n          shouldChange: shouldChange,\n          inputLabel: input,\n          helperText: helperTexts[i],\n          isRequired: true,\n          inputType: inputTypes[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"bYkzHV3vsblAiIE6/xstmcAiLK8=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/signup.tsx"],"names":["Box","Button","Typography","useState","FormInput","HomePage","bool","setBool","shouldChange","setShouldChange","firstName","lastName","username","email","password","account","setAccount","changeAccount","newAccount","inputs","helperTexts","inputTypes","instillChanges","handleSubmit","e","preventDefault","createAccount","fetch","method","body","JSON","stringify","then","res","json","data","console","log","map","input","i"],"mappings":"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","sourcesContent":["import { Box, Button, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nimport FormInput from \"./util/FormInput\";\nimport AccountInterface from \"./interfaces/AccountInterface\";\n\nfunction HomePage() {\n  const [bool, setBool] = useState(false);\n\n  // final values\n  const [shouldChange, setShouldChange] = useState(false);\n  const [account, setAccount] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  } as AccountInterface);\n  const changeAccount = (newAccount: AccountInterface) => {\n    setAccount(newAccount);\n  };\n\n  const inputs: string[] = [\n    \"First name\",\n    \"Last name\",\n    \"Username\",\n    \"Email\",\n    \"Password\",\n  ];\n  const helperTexts: string[] = [\n    \"\",\n    \"\",\n    \"Get creative!\",\n    \"Your email won't be shared.\",\n    \"Passwords are hashed.\",\n  ];\n  const inputTypes: string[] = [\"text\", \"text\", \"text\", \"email\", \"password\"];\n\n  const instillChanges = () => {\n    setShouldChange(true);\n    setBool(!bool);\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    instillChanges();\n    createAccount(account);\n    // setShouldChange(false);\n  };\n\n  const createAccount = (account: AccountInterface) => {\n    fetch(\"http://localhost:5000/accounts/create\", {\n      method: \"POST\",\n      body: JSON.stringify(account),\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data));\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Sign Up</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputs.map((input: string, i: number) => (\n          <FormInput\n            key={i}\n            id={`${input}-input`}\n            origAccount={account}\n            changeAccount={changeAccount}\n            shouldChange={shouldChange}\n            inputLabel={input}\n            helperText={helperTexts[i]}\n            isRequired={true}\n            inputType={inputTypes[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}