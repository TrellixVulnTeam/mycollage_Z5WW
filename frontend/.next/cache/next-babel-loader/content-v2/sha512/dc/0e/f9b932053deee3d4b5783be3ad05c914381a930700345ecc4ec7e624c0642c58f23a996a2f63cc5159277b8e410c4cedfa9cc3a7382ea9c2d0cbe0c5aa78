{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/projects/[userUUID].tsx\";\nimport { getCookieValue } from \"../util/logic\";\nimport { useRouter } from \"next/router\";\n\nconst Collages = ({\n  collages\n}) => {\n  const userUUID = getCookieValue(\"userUUID\");\n  console.log(userUUID);\n  console.log(typeof userUUID);\n  console.log(collages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Your Collages\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const router = useRouter();\n  const {\n    userUUID\n  } = router.query; //  const userUUID = getCookieValue(\"userUUID\");\n  //  const userUUID = \"ee59f59d-3d5f-40f3-9cd8-353e1c92dc76\";\n  //  console.log(userUUID);\n\n  const res = await fetch(`http://localhost:8080/collage/getAll/${userUUID}`);\n  const collages = await res.json();\n  return {\n    props: {\n      collages\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const router = useRouter();\n  const {\n    userUUID\n  } = router.query; //  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  //  const users = await res.json()\n\n  const paths = {\n    params: {\n      id: userUUID\n    }\n  }; //  const paths = users.map((user) => ({\n  //    params: { id: user.id.toString() },\n  //  }))\n  //\n  //    return {\n  //\n  //    }\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default Collages;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/projects/[userUUID].tsx"],"names":["getCookieValue","useRouter","Collages","collages","userUUID","console","log","getStaticProps","router","query","res","fetch","json","props","getStaticPaths","paths","params","id","fallback"],"mappings":";;AACA,SAASA,cAAT,QAA+B,eAA/B;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAMC,QAAQ,GAAGJ,cAAc,CAAC,UAAD,CAA/B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,QAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD;;AASA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeI,MAAM,CAACC,KAA5B,CAFqC,CAGrC;AACA;AACA;;AAEA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,wCAAuCP,QAAS,EAAlD,CAAvB;AACA,QAAMD,QAAQ,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAAvB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD;AAED,OAAO,eAAeW,cAAf,GAAgC;AACrC,QAAMN,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeI,MAAM,CAACC,KAA5B,CAFqC,CAGrC;AACA;;AAEA,QAAMM,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEb;AAAN;AADI,GAAd,CANqC,CAUrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AAAEW,IAAAA,KAAF;AAASG,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAED,eAAehB,QAAf","sourcesContent":["import axios from \"axios\";\nimport { getCookieValue } from \"../util/logic\";\nimport { CollageInterface } from \"../interfaces\";\nimport { useRouter } from \"next/router\";\n\nconst Collages = ({ collages }) => {\n  const userUUID = getCookieValue(\"userUUID\");\n  console.log(userUUID);\n  console.log(typeof userUUID);\n\n  console.log(collages);\n  return <div>Your Collages</div>;\n};\n\nexport async function getStaticProps() {\n  const router = useRouter();\n  const { userUUID } = router.query;\n  //  const userUUID = getCookieValue(\"userUUID\");\n  //  const userUUID = \"ee59f59d-3d5f-40f3-9cd8-353e1c92dc76\";\n  //  console.log(userUUID);\n\n  const res = await fetch(`http://localhost:8080/collage/getAll/${userUUID}`);\n  const collages = await res.json();\n\n  return {\n    props: {\n      collages,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const router = useRouter();\n  const { userUUID } = router.query;\n  //  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  //  const users = await res.json()\n\n  const paths = {\n    params: { id: userUUID },\n  };\n\n  //  const paths = users.map((user) => ({\n  //    params: { id: user.id.toString() },\n  //  }))\n  //\n  //    return {\n  //\n  //    }\n\n  return { paths, fallback: false };\n}\n\nexport default Collages;\n"]},"metadata":{},"sourceType":"module"}