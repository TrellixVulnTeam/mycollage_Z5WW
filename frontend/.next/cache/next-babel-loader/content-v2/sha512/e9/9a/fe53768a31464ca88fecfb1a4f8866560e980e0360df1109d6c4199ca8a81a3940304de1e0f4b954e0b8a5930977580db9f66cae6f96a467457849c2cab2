{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx\";\n//import { BrowserRouter as Router } from \"react-router-dom\";\n//import Route from \"react-router-dom/Route\";\n//import { useHistory } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst Login = () => {\n  // url history\n  //  const history = useHistory();\n  //\n  // state variables\n  const {\n    0: errors,\n    1: setErrors\n  } = useState([]);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const inputTypes = [\"email\", \"password\"];\n  const inputLabels = [\"Email\", \"Password\"];\n  const values = [email, password];\n  const setValues = [setEmail, setPassword];\n\n  const loginAccount = () => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data[\"errors\"]) {\n        let newErrors = [];\n        data[\"errors\"].map(error => newErrors.push(error[\"message\"]));\n        setErrors(newErrors);\n      } else {\n        setErrors([]);\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [inputTypes.map((inputType, i) => /*#__PURE__*/_jsxDEV(FormInput, {\n        id: `${inputLabels[i].toLowerCase()}-input`,\n        inputLabel: inputLabels[i],\n        inputType: inputType,\n        isRequired: true,\n        value: values[i],\n        setValue: setValues[i]\n      }, inputLabels[i], false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), errors.map(error => /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, error, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/signup\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sahilkamboj/Desktop/Coding/Github/Web_Dev/mycollage2/frontend/pages/login.tsx"],"names":["Link","Box","Typography","Button","Alert","React","useState","FormInput","Login","errors","setErrors","email","setEmail","password","setPassword","inputTypes","inputLabels","values","setValues","loginAccount","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","data","console","log","newErrors","map","error","push","handleSubmit","e","preventDefault","inputType","i","toLowerCase"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAW,EAAX,CAApC;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAS,EAAT,CAAxC;AAEA,QAAMS,UAAU,GAAG,CAAC,OAAD,EAAU,UAAV,CAAnB;AACA,QAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,UAAV,CAApB;AACA,QAAMC,MAAM,GAAG,CAACN,KAAD,EAAQE,QAAR,CAAf;AACA,QAAMK,SAAS,GAAG,CAACN,QAAD,EAAWE,WAAX,CAAlB;;AAEA,QAAMK,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,WAAW,EAAE,SAF+B;AAG5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHmC;AAM5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEf,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAf;AANsC,KAAzC,CAAL,CAQGc,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAAC,QAAD,CAAR,EAAoB;AAClB,YAAIG,SAAmB,GAAG,EAA1B;AACAH,QAAAA,IAAI,CAAC,QAAD,CAAJ,CAAeI,GAAf,CAAoBC,KAAD,IACjBF,SAAS,CAACG,IAAV,CAAeD,KAAK,CAAC,SAAD,CAApB,CADF;AAGAzB,QAAAA,SAAS,CAACuB,SAAD,CAAT;AACD,OAND,MAMO;AACLvB,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,KApBH;AAqBD,GAtBD;;AAwBA,QAAM2B,YAAY,GAAIC,CAAD,IAAuC;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACApB,IAAAA,YAAY;AACb,GAHD;;AAKA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEkB,YAA9B;AAAA,iBACGtB,UAAU,CAACmB,GAAX,CAAe,CAACM,SAAD,EAAYC,CAAZ,kBACd,QAAC,SAAD;AAEE,QAAA,EAAE,EAAG,GAAEzB,WAAW,CAACyB,CAAD,CAAX,CAAeC,WAAf,EAA6B,QAFtC;AAGE,QAAA,UAAU,EAAE1B,WAAW,CAACyB,CAAD,CAHzB;AAIE,QAAA,SAAS,EAAED,SAJb;AAKE,QAAA,UAAU,EAAE,IALd;AAME,QAAA,KAAK,EAAEvB,MAAM,CAACwB,CAAD,CANf;AAOE,QAAA,QAAQ,EAAEvB,SAAS,CAACuB,CAAD;AAPrB,SACOzB,WAAW,CAACyB,CAAD,CADlB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAYE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAeGhC,MAAM,CAACyB,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AAAmB,QAAA,QAAQ,EAAC,OAA5B;AAAA,kBACGA;AADH,SAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,cADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAxED;;AA0EA,eAAe3B,KAAf","sourcesContent":["//import { BrowserRouter as Router } from \"react-router-dom\";\n//import Route from \"react-router-dom/Route\";\n//import { useHistory } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport FormInput from \"./util/components/FormInput\";\n\nconst Login = () => {\n  // url history\n  //  const history = useHistory();\n  //\n  // state variables\n  const [errors, setErrors] = useState<string[]>([]);\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const inputTypes = [\"email\", \"password\"];\n  const inputLabels = [\"Email\", \"Password\"];\n  const values = [email, password];\n  const setValues = [setEmail, setPassword];\n\n  const loginAccount = () => {\n    fetch(\"http://localhost:5000/accounts/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        if (data[\"errors\"]) {\n          let newErrors: string[] = [];\n          data[\"errors\"].map((error: { [x: string]: string }) =>\n            newErrors.push(error[\"message\"])\n          );\n          setErrors(newErrors);\n        } else {\n          setErrors([]);\n        }\n      });\n  };\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    loginAccount();\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">Log In</Typography>\n      <form method=\"POST\" onSubmit={handleSubmit}>\n        {inputTypes.map((inputType, i) => (\n          <FormInput\n            key={inputLabels[i]}\n            id={`${inputLabels[i].toLowerCase()}-input`}\n            inputLabel={inputLabels[i]}\n            inputType={inputType}\n            isRequired={true}\n            value={values[i]}\n            setValue={setValues[i]}\n          />\n        ))}\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n        {errors.map((error) => (\n          <Alert key={error} severity=\"error\">\n            {error}\n          </Alert>\n        ))}\n      </form>\n      <Link href=\"/signup\">\n        <a>Create Account</a>\n      </Link>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}